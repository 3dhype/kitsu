{"version":3,"sources":["webpack:///./src/components/pages/Playlist.vue?e95b","webpack:///./src/components/pages/Playlist.vue?97c0","webpack:///./src/components/widgets/ErrorText.vue?faca","webpack:///src/components/widgets/ErrorText.vue","webpack:///./src/components/widgets/ErrorText.vue?f04f","webpack:///./src/components/widgets/ErrorText.vue","webpack:///src/components/pages/Playlist.vue","webpack:///./src/components/pages/Playlist.vue?2e53","webpack:///./src/components/pages/Playlist.vue?f8fd"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","ref","class","column","toggled","isListToggled","attrs","taskTypeList","$t","model","callback","$$v","taskTypeId","_e","sortOptions","currentSort","isCurrentUserManager","key","button","loading","addPlaylist","on","showAddModal","_v","_s","playlists","_l","playlist","id","for_client","selected","currentPlaylist","style","playlistElementStyle","getPlaylistPath","first_preview_file_id","formatDate","updated_at","errors","length","playlistsInit","created_at","big","currentEntities","isAddingEntity","isAssetPlaylist","showEditModal","toggleAddEntities","onPreviewChanged","onTaskTypeChanged","$event","$router","push","playlistsPath","removeEntity","onOrderChange","onAnnotationChanged","onForClientChanged","addEntitiesText","onSearchChange","modals","isBuildFilterDisplayed","isAdditionLoading","addCurrentSelection","addDaily","addDailyPending","isTVShow","addEpisode","addEpisodePending","addMovie","isShotsLoading","isAssetsLoading","typeAssets","i","asset_type_name","filter","a","canceled","asset","preventDefault","addEntityToPlaylist","preview_file_id","sequenceShots","sequence_name","sequence_id","addSequence","s","shot","playlisted","undefined","color","getTaskStatus","isEditDisplayed","editPlaylist","playlistToEdit","hideEditModal","confirmEditPlaylist","confirmBuildFilter","staticRenderFns","alignRight","hidden","text","props","default","type","String","Boolean","component","components","BuildFilterModal","ButtonSimple","Combobox","ComboboxTaskType","ErrorText","EditPlaylistModal","LightEntityThumbnail","PageSubtitle","PlaylistPlayer","PlusIcon","SearchField","Spinner","XIcon","data","page","sortedPlaylists","isDeleteDisplayed","addWeekly","deletePlaylist","playlistLoading","computed","for_entity","isAddSearchVisible","lastPlaylistsUpdated","lastPlaylistsCreated","slice","playlistPlayer","$refs","tvShowPageTitle","currentEpisode","episodeName","shortPageTitle","methods","entity","shotMap","get","assetMap","taskId","task","taskStatus","loadShotsData","loadShots","loadAssetsData","displayedAssets","loadAssets","Promise","resolve","loadPlaylistsData","force","loadPlaylists","sortBy","setFirstPlaylist","onPlaylistListScroll","$options","silentMore","maxHeight","loadMorePlaylists","rebuildCurrentEntities","shots","forEach","playlistEntity","tmpEntities","$nextTick","convertEntityToPlaylistFormat","entityInfo","parent_name","preview_files","preview_file_extension","preview_file_task_id","preview_file_annotations","preview_file_previews","setCurrentPlaylist","loadPlaylist","err","console","error","currentShots","addEntity","loadEntityPreviewFiles","addToStorePlaylistAndSave","pushEntityToPlaylist","previewFiles","addToPlayerPlaylist","entityList","removeEntityPreviewFromPlaylist","clearCurrentPlaylist","resetPlaylist","silent","addEntities","addAllPending","getPending","reverse","entities","changePlaylistPreview","previewFileId","changePlaylistOrder","info","updatePreviewAnnotation","setValue","query","searchQuery","setAssetSearch","displayMoreAssets","setShotSearch","displayMoreShots","forClient","runAddPlaylist","form","production_id","currentProduction","is_for_all","task_type_id","newPlaylist","episode_id","runEditPlaylist","Object","assign","goFirstPlaylist","params","playlist_id","changePlaylistType","onBodyScroll","position","scrollTop","resetSorting","includes","order","reloadAll","mounted","localStorage","getItem","watch","$route","$store","commit","setItem","onWindowResize","socket","events","playlistMap","eventData","refreshPlaylist","build_jobs","build_job_id","status","metaInfo"],"mappings":"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","file":"js/chunk-da629308.7cfb675d.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Playlist.vue?vue&type=style&index=0&id=5651601a&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"playlists page fixed-page dark\"},[_c('div',{staticClass:\"columns\"},[_c('div',{directives:[{name:\"scroll\",rawName:\"v-scroll\",value:(_vm.onPlaylistListScroll),expression:\"onPlaylistListScroll\"}],ref:\"playlistList\",class:{\n        'playlist-list-column': true,\n        column: true,\n        toggled: _vm.isListToggled\n      }},[_c('div',{staticClass:\"flexrow\"},[_c('combobox-task-type',{staticClass:\"flexrow-item selector mb1\",attrs:{\"task-type-list\":_vm.taskTypeList,\"label\":_vm.$t('playlists.filter_task_type'),\"thin\":true},model:{value:(_vm.taskTypeId),callback:function ($$v) {_vm.taskTypeId=$$v},expression:\"taskTypeId\"}})],1),_c('div',{staticClass:\"flexrow\"},[(!_vm.isListToggled)?[_c('combobox',{staticClass:\"flexrow-item mb2\",attrs:{\"label\":_vm.$t('main.sorted_by'),\"options\":_vm.sortOptions,\"locale-key-prefix\":\"playlists.fields.\"},model:{value:(_vm.currentSort),callback:function ($$v) {_vm.currentSort=$$v},expression:\"currentSort\"}}),_c('span',{staticClass:\"flexrow-item filler\"})]:_vm._e()],2),(_vm.isCurrentUserManager && !_vm.isListToggled)?_c('button',{key:\"new-playlist-button\",class:{\n          button: true,\n          'is-loading': _vm.loading.addPlaylist\n        },on:{\"click\":_vm.showAddModal}},[_c('plus-icon',{staticClass:\"icon is-small\"}),_vm._v(\" \"+_vm._s(_vm.$t('playlists.new_playlist'))+\" \")],1):_vm._e(),(!_vm.loading.playlists)?_c('div',{staticClass:\"playlists\"},_vm._l((_vm.playlists),function(playlist){return _c('router-link',{key:playlist.id,class:{\n            'playlist-item': true,\n            'for-client': playlist.for_client || false,\n            selected: playlist.id === _vm.currentPlaylist.id\n          },style:(_vm.playlistElementStyle(playlist)),attrs:{\"to\":_vm.getPlaylistPath(playlist.id)}},[(!_vm.isListToggled)?_c('div',[_c('span',[_vm._v(\" \"+_vm._s(playlist.name)+\" \")]),_c('span',{staticClass:\"playlist-date\",attrs:{\"title\":\"last modified\"}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.updated_at'))+\" \"+_vm._s(_vm.formatDate(playlist.updated_at))+\" \")])]):_c('div',{staticClass:\"has-text-centered\"},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":playlist.first_preview_file_id,\"type\":\"previews\",\"width\":\"auto\",\"height\":\"auto\",\"max-width\":\"40px\",\"max-height\":\"30px\",\"empty-height\":\"30px\",\"title\":playlist.name}})],1)])}),1):_c('spinner',{staticClass:\"mt2\"}),(_vm.errors.playlistLoading)?_c('error-text',{attrs:{\"text\":\"$t('playlists.loading_error')\"}}):_vm._e()],1),(_vm.playlists.length > 0 && !_vm.currentPlaylist.id && !_vm.loading.playlist)?_c('div',{staticClass:\"playlist-column no-selection\"},[_c('h2',[_vm._v(_vm._s(_vm.$t('playlists.last_creation')))]),(!_vm.loading.playlists && !_vm.loading.playlistsInit)?_c('div',{staticClass:\"flexrow\"},_vm._l((_vm.lastPlaylistsCreated),function(playlist){return _c('router-link',{key:'recent-playlist-' + playlist.id,staticClass:\"recent-playlist flexrow-item\",attrs:{\"to\":_vm.getPlaylistPath(playlist.id)}},[_c('div',{staticClass:\"has-text-centered\"},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":playlist.first_preview_file_id,\"type\":\"previews\",\"width\":\"auto\",\"height\":\"auto\",\"max-width\":\"300px\",\"max-height\":\"150px\",\"empty-height\":\"150px\"}})],1),_c('h3',[_vm._v(_vm._s(playlist.name))]),_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('playlists.created_at'))+\" \"+_vm._s(_vm.formatDate(playlist.created_at))+\" \")])])}),1):_c('spinner',{staticClass:\"mt2\"}),_c('h2',[_vm._v(_vm._s(_vm.$t('playlists.last_modification')))]),(!_vm.loading.playlists)?_c('div',{staticClass:\"flexrow\"},_vm._l((_vm.lastPlaylistsUpdated),function(playlist){return _c('router-link',{key:'recent-modified-playlist-' + playlist.id,staticClass:\"recent-playlist flexrow-item\",attrs:{\"to\":_vm.getPlaylistPath(playlist.id)}},[_c('div',{staticClass:\"has-text-centered\"},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":playlist.first_preview_file_id,\"type\":\"previews\",\"width\":\"auto\",\"height\":\"auto\",\"max-width\":\"300px\",\"max-height\":\"150px\",\"empty-height\":\"150px\"}})],1),_c('h3',[_vm._v(_vm._s(playlist.name))]),_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('playlists.updated_at'))+\" \"+_vm._s(_vm.formatDate(playlist.updated_at))+\" \")])])}),1):_c('spinner',{staticClass:\"mt2\"})],1):(_vm.playlists.length === 0)?_c('div',{staticClass:\"playlist-column no-selection has-text-centered\"},[(!_vm.loading.playlists && !_vm.loading.playlistsInit)?_c('div',[_c('p',{staticClass:\"empty-explaination\"},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.no_playlist'))+\" \")]),(_vm.isCurrentUserManager)?_c('button',{key:\"new-playlist-button\",class:{\n            big: true,\n            button: true,\n            'is-loading': _vm.loading.addPlaylist\n          },on:{\"click\":_vm.showAddModal}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.new_playlist'))+\" \")]):_vm._e()]):_c('spinner',{staticClass:\"mt2\"})],1):_c('div',{staticClass:\"playlist-column column\"},[_c('playlist-player',{ref:\"playlist-player\",attrs:{\"playlist\":_vm.currentPlaylist,\"entities\":_vm.currentEntities,\"is-loading\":_vm.loading.playlist,\"is-adding-entity\":_vm.isAddingEntity,\"is-asset-playlist\":_vm.isAssetPlaylist},on:{\"edit-clicked\":_vm.showEditModal,\"show-add-entities\":_vm.toggleAddEntities,\"preview-changed\":_vm.onPreviewChanged,\"task-type-changed\":_vm.onTaskTypeChanged,\"playlist-deleted\":function($event){return _vm.$router.push(_vm.playlistsPath)},\"remove-entity\":_vm.removeEntity,\"order-change\":_vm.onOrderChange,\"annotation-changed\":_vm.onAnnotationChanged,\"for-client-changed\":_vm.onForClientChanged}}),(_vm.isCurrentUserManager && _vm.isAddingEntity && !_vm.loading.playlist)?_c('div',[_c('div',{staticClass:\"addition-header\"},[_c('div',{staticClass:\"flexrow\"},[_c('page-subtitle',{staticClass:\"flexrow-item\",attrs:{\"text\":_vm.addEntitiesText}}),_c('span',{staticClass:\"filler\"}),_c('a',{staticClass:\"close-button\",on:{\"click\":_vm.toggleAddEntities}},[_c('x-icon')],1)],1),_c('div',{staticClass:\"flexrow\"},[_c('search-field',{ref:\"search-field\",staticClass:\"flexrow-item\",attrs:{\"can-save\":false,\"placeholder\":_vm.isAssetPlaylist ? 'chars mode=wfa' : 'ex: seq01 anim=wfa'},on:{\"change\":_vm.onSearchChange}}),_c('button-simple',{staticClass:\"flexrow-item\",attrs:{\"title\":_vm.$t('entities.build_filter.title'),\"icon\":\"funnel\"},on:{\"click\":function($event){_vm.modals.isBuildFilterDisplayed = true}}}),(_vm.isAddSearchVisible)?_c('button',{class:{\n                button: true,\n                'flexrow-item': true,\n                'add-sequence': true\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addCurrentSelection}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_selection'))+\" \")]):_vm._e(),_c('span',{staticClass:\"filler\"}),(!_vm.isAssetPlaylist)?_c('button',{class:{\n                button: true,\n                'add-sequence': true,\n                'is-loading': this.loading.addDaily\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addDailyPending}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.build_daily'))+\" \")]):_vm._e(),(_vm.isTVShow && !_vm.isAssetPlaylist)?_c('button',{class:{\n                button: true,\n                'add-sequence': true,\n                'is-loading': this.loading.addEpisode\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addEpisodePending}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_episode'))+\" \")]):(!_vm.isAssetPlaylist)?_c('button',{class:{\n                button: true,\n                'add-sequence': true,\n                'is-loading': this.loading.addMovie\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addMovie}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_movie'))+\" \")]):_vm._e()],1)])]):_vm._e(),(_vm.isCurrentUserManager && _vm.isAddingEntity)?_c('div',{directives:[{name:\"scroll\",rawName:\"v-scroll\",value:(_vm.onBodyScroll),expression:\"onBodyScroll\"}],staticClass:\"addition-section\"},[(_vm.isShotsLoading || _vm.isAssetsLoading)?_c('spinner',{key:\"entity-loader\",staticClass:\"mt2\"}):_c('div',{ref:\"entityListContent\"},[(_vm.isAssetPlaylist)?_c('div',_vm._l((_vm.displayedAssetsByType),function(typeAssets,i){return _c('div',{key:'asset-type-' + i},[(typeAssets.length > 0)?_c('h2',{staticClass:\"entity-group-title\"},[_vm._v(\" \"+_vm._s(typeAssets[0].asset_type_name)+\" \")]):_vm._e(),_c('div',{staticClass:\"addition-entities\"},_vm._l((typeAssets.filter(function (a) { return !a.canceled; })),function(asset){return _c('div',{key:asset.id,class:{\n                    'addition-shot': true\n                  },on:{\"click\":function($event){$event.preventDefault();return _vm.addEntityToPlaylist(asset)}}},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":asset.preview_file_id,\"width\":\"150px\",\"height\":\"100px\"}}),_c('span',{staticClass:\"playlisted-shot-name\"},[_vm._v(_vm._s(asset.name))])],1)}),0)])}),0):_c('div',_vm._l((_vm.displayedShotsBySequence),function(sequenceShots,i){return _c('div',{key:'sequence-' + i},[(sequenceShots.length > 0)?_c('h2',{staticClass:\"entity-group-title\"},[_vm._v(\" \"+_vm._s(sequenceShots[0].sequence_name)+\" \"),(_vm.isCurrentUserManager)?_c('button',{key:'add-sequence-button-' + sequenceShots[0].sequence_id,staticClass:\"button\",on:{\"click\":function($event){return _vm.addSequence(sequenceShots)}}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_sequence'))+\" \")]):_vm._e()]):_vm._e(),_c('div',{staticClass:\"addition-entities\"},_vm._l((sequenceShots.filter(function (s) { return !s.canceled; })),function(shot){return _c('div',{key:shot.id,class:{\n                    'addition-shot': true,\n                    playlisted: _vm.currentEntities[shot.id] !== undefined\n                  },on:{\"click\":function($event){$event.preventDefault();return _vm.addEntityToPlaylist(shot)}}},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":shot.preview_file_id,\"width\":\"150px\",\"height\":\"100px\"}}),_c('div',[(_vm.currentPlaylist.task_type_id)?_c('span',{style:({\n                        color: _vm.getTaskStatus(shot).color\n                      }),attrs:{\"title\":_vm.getTaskStatus(shot).name}},[_vm._v(\" • \")]):_vm._e(),_c('span',{staticClass:\"playlisted-shot-name\"},[_vm._v(_vm._s(shot.name))])])],1)}),0)])}),0)])],1):_vm._e()],1)]),_c('edit-playlist-modal',{ref:\"edit-playlist-modal\",attrs:{\"active\":_vm.modals.isEditDisplayed,\"is-loading\":_vm.loading.editPlaylist,\"is-error\":_vm.errors.editPlaylist,\"playlist-to-edit\":_vm.playlistToEdit,\"task-type-id\":_vm.taskTypeId},on:{\"cancel\":_vm.hideEditModal,\"confirm\":_vm.confirmEditPlaylist}}),_c('build-filter-modal',{ref:\"build-filter-modal\",attrs:{\"active\":_vm.modals.isBuildFilterDisplayed,\"entity-type\":_vm.isAssetPlaylist ? 'asset' : 'shot'},on:{\"confirm\":_vm.confirmBuildFilter,\"cancel\":function($event){_vm.modals.isBuildFilterDisplayed = false}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{class:{\n  'error': true,\n  'has-text-right': _vm.alignRight,\n  'is-hidden': _vm.hidden\n}},[_vm._v(\" \"+_vm._s(_vm.text)+\" \")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<p :class=\"{\n  'error': true,\n  'has-text-right': alignRight,\n  'is-hidden': hidden\n}\">\n  {{ text }}\n</p>\n</template>\n\n<script>\nexport default {\n  name: 'error-text',\n  props: {\n    text: {\n      default: '',\n      type: String\n    },\n    hidden: {\n      default: false,\n      type: Boolean\n    },\n    alignRight: {\n      default: false,\n      type: Boolean\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ErrorText.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ErrorText.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ErrorText.vue?vue&type=template&id=1338c033&\"\nimport script from \"./ErrorText.vue?vue&type=script&lang=js&\"\nexport * from \"./ErrorText.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"playlists page fixed-page dark\">\n    <div class=\"columns\">\n      <div\n        ref=\"playlistList\"\n        :class=\"{\n          'playlist-list-column': true,\n          column: true,\n          toggled: isListToggled\n        }\"\n        v-scroll=\"onPlaylistListScroll\"\n      >\n\n        <div class=\"flexrow\">\n          <combobox-task-type\n            class=\"flexrow-item selector mb1\"\n            :task-type-list=\"taskTypeList\"\n            :label=\"$t('playlists.filter_task_type')\"\n            :thin=\"true\"\n            v-model=\"taskTypeId\"\n          />\n        </div>\n\n        <div class=\"flexrow\">\n          <template v-if=\"!isListToggled\">\n            <combobox\n              class=\"flexrow-item mb2\"\n              :label=\"$t('main.sorted_by')\"\n              :options=\"sortOptions\"\n              locale-key-prefix=\"playlists.fields.\"\n              v-model=\"currentSort\"\n            />\n            <span class=\"flexrow-item filler\"></span>\n          </template>\n          <!--button-simple\n            class=\"flexrow-item\"\n            style=\"flex: 0;\"\n            @click=\"isListToggled = !isListToggled\"\n            :icon=\"isListToggled ? 'right' : 'left'\"\n          /-->\n\n        </div>\n\n        <button\n          :class=\"{\n            button: true,\n            'is-loading': loading.addPlaylist\n          }\"\n          @click=\"showAddModal\"\n          key=\"new-playlist-button\"\n          v-if=\"isCurrentUserManager && !isListToggled\"\n        >\n          <plus-icon class=\"icon is-small\" />\n          {{ $t('playlists.new_playlist') }}\n        </button>\n\n        <div\n          class=\"playlists\"\n          v-if=\"!loading.playlists\"\n        >\n          <router-link\n            :key=\"playlist.id\"\n            :to=\"getPlaylistPath(playlist.id)\"\n            :class=\"{\n              'playlist-item': true,\n              'for-client': playlist.for_client || false,\n              selected: playlist.id === currentPlaylist.id\n            }\"\n            :style=\"playlistElementStyle(playlist)\"\n            v-for=\"playlist in playlists\"\n          >\n            <div v-if=\"!isListToggled\">\n            <span>\n              {{ playlist.name }}\n            </span>\n            <span class=\"playlist-date\" title=\"last modified\">\n              {{ $t('playlists.updated_at') }}\n              {{ formatDate(playlist.updated_at) }}\n            </span>\n            </div>\n            <div class=\"has-text-centered\" v-else>\n              <light-entity-thumbnail\n                :preview-file-id=\"playlist.first_preview_file_id\"\n                type=\"previews\"\n                width=\"auto\"\n                height=\"auto\"\n                max-width=\"40px\"\n                max-height=\"30px\"\n                empty-height=\"30px\"\n                :title=\"playlist.name\"\n              />\n            </div>\n          </router-link>\n        </div>\n        <spinner\n          class=\"mt2\"\n          v-else\n        />\n        <error-text\n          text=\"$t('playlists.loading_error')\"\n          v-if=\"errors.playlistLoading\"\n        />\n      </div>\n\n      <div\n        class=\"playlist-column no-selection\"\n        v-if=\"playlists.length > 0 && !currentPlaylist.id && !loading.playlist\"\n      >\n        <h2>{{ $t('playlists.last_creation') }}</h2>\n        <div class=\"flexrow\" v-if=\"!loading.playlists && !loading.playlistsInit\">\n          <router-link\n            class=\"recent-playlist flexrow-item\"\n            :key=\"'recent-playlist-' + playlist.id\"\n            :to=\"getPlaylistPath(playlist.id)\"\n            v-for=\"playlist in lastPlaylistsCreated\"\n          >\n            <div class=\"has-text-centered\">\n              <light-entity-thumbnail\n                :preview-file-id=\"playlist.first_preview_file_id\"\n                type=\"previews\"\n                width=\"auto\"\n                height=\"auto\"\n                max-width=\"300px\"\n                max-height=\"150px\"\n                empty-height=\"150px\"\n              />\n            </div>\n            <h3>{{ playlist.name }}</h3>\n            <span>\n              {{ $t('playlists.created_at') }}\n              {{ formatDate(playlist.created_at) }}\n            </span>\n          </router-link>\n        </div>\n        <spinner class=\"mt2\" v-else />\n\n        <h2>{{ $t('playlists.last_modification') }}</h2>\n        <div class=\"flexrow\" v-if=\"!loading.playlists\">\n          <router-link\n            class=\"recent-playlist flexrow-item\"\n            :key=\"'recent-modified-playlist-' + playlist.id\"\n            :to=\"getPlaylistPath(playlist.id)\"\n            v-for=\"playlist in lastPlaylistsUpdated\"\n          >\n            <div class=\"has-text-centered\">\n              <light-entity-thumbnail\n                :preview-file-id=\"playlist.first_preview_file_id\"\n                type=\"previews\"\n                width=\"auto\"\n                height=\"auto\"\n                max-width=\"300px\"\n                max-height=\"150px\"\n                empty-height=\"150px\"\n              />\n            </div>\n            <h3>{{ playlist.name }}</h3>\n            <span>\n              {{ $t('playlists.updated_at') }}\n              {{ formatDate(playlist.updated_at) }}\n            </span>\n          </router-link>\n        </div>\n        <spinner class=\"mt2\" v-else />\n      </div>\n      <div\n        class=\"playlist-column no-selection has-text-centered\"\n        v-else-if=\"playlists.length === 0\"\n      >\n        <div v-if=\"!loading.playlists && !loading.playlistsInit\">\n          <p class=\"empty-explaination\">\n            {{ $t('playlists.no_playlist') }}\n          </p>\n          <button\n            :class=\"{\n              big: true,\n              button: true,\n              'is-loading': loading.addPlaylist\n            }\"\n            @click=\"showAddModal\"\n            key=\"new-playlist-button\"\n            v-if=\"isCurrentUserManager\"\n          >\n            {{ $t('playlists.new_playlist') }}\n          </button>\n        </div>\n        <spinner class=\"mt2\" v-else />\n      </div>\n\n      <div class=\"playlist-column column\" v-else>\n        <playlist-player\n          ref=\"playlist-player\"\n          :playlist=\"currentPlaylist\"\n          :entities=\"currentEntities\"\n          :is-loading=\"loading.playlist\"\n          :is-adding-entity=\"isAddingEntity\"\n          :is-asset-playlist=\"isAssetPlaylist\"\n          @edit-clicked=\"showEditModal\"\n          @show-add-entities=\"toggleAddEntities\"\n          @preview-changed=\"onPreviewChanged\"\n          @task-type-changed=\"onTaskTypeChanged\"\n          @playlist-deleted=\"$router.push(playlistsPath)\"\n          @remove-entity=\"removeEntity\"\n          @order-change=\"onOrderChange\"\n          @annotation-changed=\"onAnnotationChanged\"\n          @for-client-changed=\"onForClientChanged\"\n        />\n\n        <div\n          v-if=\"isCurrentUserManager && isAddingEntity && !loading.playlist\"\n        >\n          <div class=\"addition-header\">\n            <div class=\"flexrow\">\n              <page-subtitle\n                class=\"flexrow-item\"\n                :text=\"addEntitiesText\"\n              />\n              <span class=\"filler\"></span>\n              <a\n                class=\"close-button\"\n                @click=\"toggleAddEntities\"\n              >\n                <x-icon />\n              </a>\n            </div>\n            <div class=\"flexrow\">\n              <search-field\n                class=\"flexrow-item\"\n                ref=\"search-field\"\n                :can-save=\"false\"\n                @change=\"onSearchChange\"\n                :placeholder=\"isAssetPlaylist ? 'chars mode=wfa' : 'ex: seq01 anim=wfa'\"\n              />\n              <button-simple\n                class=\"flexrow-item\"\n                :title=\"$t('entities.build_filter.title')\"\n                icon=\"funnel\"\n                @click=\"modals.isBuildFilterDisplayed = true\"\n              />\n              <button\n                :class=\"{\n                  button: true,\n                  'flexrow-item': true,\n                  'add-sequence': true\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addCurrentSelection\"\n                v-if=\"isAddSearchVisible\"\n              >\n                {{ $t('playlists.add_selection') }}\n              </button>\n              <span class=\"filler\"></span>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': this.loading.addDaily\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addDailyPending\"\n                v-if=\"!isAssetPlaylist\"\n              >\n                {{ $t('playlists.build_daily') }}\n              </button>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': this.loading.addEpisode\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addEpisodePending\"\n                v-if=\"isTVShow && !isAssetPlaylist\"\n              >\n                {{ $t('playlists.add_episode') }}\n              </button>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': this.loading.addMovie\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addMovie\"\n                v-else-if=\"!isAssetPlaylist\"\n              >\n                {{ $t('playlists.add_movie') }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div\n          class=\"addition-section\"\n          v-if=\"isCurrentUserManager && isAddingEntity\"\n          v-scroll=\"onBodyScroll\"\n        >\n          <spinner\n            class=\"mt2\"\n            key=\"entity-loader\"\n            v-if=\"isShotsLoading || isAssetsLoading\"\n          />\n          <div\n            ref=\"entityListContent\"\n            v-else\n          >\n            <div v-if=\"isAssetPlaylist\">\n              <div\n                :key=\"'asset-type-' + i\"\n                v-for=\"(typeAssets, i) in displayedAssetsByType\"\n              >\n                <h2\n                  class=\"entity-group-title\"\n                  v-if=\"typeAssets.length > 0\"\n                >\n                  {{ typeAssets[0].asset_type_name }}\n                </h2>\n                <div\n                 class=\"addition-entities\"\n                >\n                  <div\n                    :class=\"{\n                      'addition-shot': true\n                    }\"\n                    :key=\"asset.id\"\n                    @click.prevent=\"addEntityToPlaylist(asset)\"\n                    v-for=\"asset in typeAssets.filter(a => !a.canceled)\"\n                  >\n                      <light-entity-thumbnail\n                        :preview-file-id=\"asset.preview_file_id\"\n                        width=\"150px\"\n                        height=\"100px\"\n                      />\n                    <span class=\"playlisted-shot-name\">{{ asset.name }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div v-else>\n              <div\n                :key=\"'sequence-' + i\"\n                v-for=\"(sequenceShots, i) in displayedShotsBySequence\"\n              >\n                <h2\n                  class=\"entity-group-title\"\n                  v-if=\"sequenceShots.length > 0\"\n                >\n                  {{ sequenceShots[0].sequence_name }}\n                  <button\n                    class=\"button\"\n                    @click=\"addSequence(sequenceShots)\"\n                    :key=\"'add-sequence-button-' + sequenceShots[0].sequence_id\"\n                    v-if=\"isCurrentUserManager\"\n                  >\n                    {{ $t('playlists.add_sequence') }}\n                  </button>\n                </h2>\n                <div\n                 class=\"addition-entities\"\n                >\n                  <div\n                    :class=\"{\n                      'addition-shot': true,\n                      playlisted: currentEntities[shot.id] !== undefined\n                    }\"\n                    :key=\"shot.id\"\n                    @click.prevent=\"addEntityToPlaylist(shot)\"\n                    v-for=\"shot in sequenceShots.filter(s => !s.canceled)\"\n                  >\n                    <light-entity-thumbnail\n                      :preview-file-id=\"shot.preview_file_id\"\n                      width=\"150px\"\n                      height=\"100px\"\n                    />\n                    <div>\n                      <span\n                        :title=\"getTaskStatus(shot).name\"\n                        :style=\"{\n                          color: getTaskStatus(shot).color\n                        }\"\n                        v-if=\"currentPlaylist.task_type_id\"\n                      >\n                        &bullet;\n                      </span>\n                      <span class=\"playlisted-shot-name\">{{ shot.name }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <edit-playlist-modal\n      ref=\"edit-playlist-modal\"\n      :active=\"modals.isEditDisplayed\"\n      :is-loading=\"loading.editPlaylist\"\n      :is-error=\"errors.editPlaylist\"\n      :playlist-to-edit=\"playlistToEdit\"\n      :task-type-id=\"taskTypeId\"\n      @cancel=\"hideEditModal\"\n      @confirm=\"confirmEditPlaylist\"\n    />\n\n    <build-filter-modal\n      ref=\"build-filter-modal\"\n      :active=\"modals.isBuildFilterDisplayed\"\n      :entity-type=\"isAssetPlaylist ? 'asset' : 'shot'\"\n      @confirm=\"confirmBuildFilter\"\n      @cancel=\"modals.isBuildFilterDisplayed = false\"\n    />\n  </div>\n</template>\n<script>\nimport firstBy from 'thenby'\nimport moment from 'moment-timezone'\nimport { mapGetters, mapActions } from 'vuex'\nimport { PlusIcon, XIcon } from 'vue-feather-icons'\nimport { formatDate } from '@/lib/time'\nimport { getPlaylistPath } from '@/lib/path'\nimport {\n  updateModelFromList,\n  removeModelFromList\n} from '@/lib/models'\nimport { sortShots } from '@/lib/sorting'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport BuildFilterModal from '@/components/modals/BuildFilterModal'\nimport Combobox from '@/components/widgets/Combobox'\nimport ComboboxTaskType from '@/components/widgets/ComboboxTaskType'\nimport EditPlaylistModal from '@/components/modals/EditPlaylistModal'\nimport ErrorText from '@/components/widgets/ErrorText'\nimport LightEntityThumbnail from '@/components/widgets/LightEntityThumbnail'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport PlaylistPlayer from './playlists/PlaylistPlayer'\nimport SearchField from '@/components/widgets/SearchField'\nimport Spinner from '@/components/widgets/Spinner'\n\nexport default {\n  name: 'productions',\n\n  components: {\n    BuildFilterModal,\n    ButtonSimple,\n    Combobox,\n    ComboboxTaskType,\n    ErrorText,\n    EditPlaylistModal,\n    LightEntityThumbnail,\n    PageSubtitle,\n    PlaylistPlayer,\n    PlusIcon,\n    SearchField,\n    Spinner,\n    XIcon\n  },\n\n  data () {\n    return {\n      currentPlaylist: { name: '' },\n      currentSort: 'updated_at',\n      currentEntities: {},\n      isAddingEntity: false,\n      isListToggled: false,\n      page: 1,\n      taskTypeId: '',\n      sortedPlaylists: [],\n      sortOptions: [\n        'updated_at',\n        'created_at',\n        'name'\n      ].map(name => ({ label: name, value: name })),\n      playlistToEdit: {\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\n        for_client: false\n      },\n      modals: {\n        isBuildFilterDisplayed: false,\n        isDeleteDisplayed: false,\n        isEditDisplayed: false\n      },\n      loading: {\n        addPlaylist: false,\n        addDaily: false,\n        addEpisode: false,\n        addMovie: false,\n        addSequence: false,\n        addWeekly: false,\n        deletePlaylist: false,\n        editPlaylist: false,\n        playlist: false,\n        playlists: false,\n        playlistsInit: true\n      },\n      errors: {\n        addPlaylist: false,\n        editPlaylist: false,\n        deletePlaylist: false,\n        playlistLoading: false\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetMap',\n      'assetSearchText',\n      'currentEpisode',\n      'currentProduction',\n      'displayedAssets',\n      'displayedAssetsByType',\n      'displayedShots',\n      'displayedShotsBySequence',\n      'isAssetsLoading',\n      'isCurrentUserManager',\n      'isShotsLoading',\n      'isTVShow',\n      'productionTaskTypes',\n      'playlistMap',\n      'playlists',\n      'playlistsPath',\n      'shotsByEpisode',\n      'shotSearchText',\n      'shotMap',\n      'taskMap',\n      'taskStatusMap',\n      'taskTypeMap'\n    ]),\n\n    isAdditionLoading () {\n      return (\n        this.loading.addSequence ||\n        this.loading.addWeekly ||\n        this.loading.addDaily ||\n        this.loading.addEpisode\n      )\n    },\n\n    isAssetPlaylist () {\n      return this.currentPlaylist.for_entity === 'asset'\n    },\n\n    isAddSearchVisible () {\n      return (\n        (this.isAssetPlaylist && this.assetSearchText) ||\n        (!this.isAssetPlaylist && this.shotSearchText)\n      )\n    },\n\n    lastPlaylistsUpdated () {\n      return this.playlists\n        .concat()\n        .sort(firstBy('updated_at'))\n        .reverse()\n        .slice(0, 3)\n    },\n\n    lastPlaylistsCreated () {\n      return this.playlists.slice(0, 3)\n    },\n\n    playlistPlayer () {\n      return this.$refs['playlist-player']\n    },\n\n    addEntitiesText () {\n      if (this.isAssetPlaylist) {\n        return this.$t('playlists.add_assets')\n      } else {\n        return this.$t('playlists.add_shots')\n      }\n    },\n\n    tvShowPageTitle () {\n      const productionName =\n        this.currentProduction ? this.currentProduction.name : ''\n      let episodeName = ''\n      if (this.currentEpisode) {\n        episodeName = this.currentEpisode.name\n        if (this.currentEpisode.id === 'all') episodeName = this.$t('main.all')\n        if (this.currentEpisode.id === 'main') episodeName = 'Main Pack'\n      }\n      return `${productionName} - ${episodeName}` +\n             ` | ${this.$t('playlists.title')} - Kitsu`\n    },\n\n    shortPageTitle () {\n      const productionName =\n        this.currentProduction ? this.currentProduction.name : ''\n      return `${productionName} ${this.$t('playlists.title')} - Kitsu`\n    },\n\n    taskTypeList () {\n      return [{\n        id: '',\n        color: '#999',\n        name: this.$t('news.all')\n      }].concat([...this.productionTaskTypes])\n    }\n\n  },\n\n  methods: {\n    ...mapActions([\n      'addNewBuildJob',\n      'pushEntityToPlaylist',\n      'changePlaylistOrder',\n      'changePlaylistPreview',\n      'changePlaylistType',\n      'displayMoreAssets',\n      'displayMoreShots',\n      'editPlaylist',\n      'getPending',\n      'loadMorePlaylists',\n      'loadPlaylist',\n      'loadPlaylists',\n      'loadEntityPreviewFiles',\n      'loadShots',\n      'loadAssets',\n      'markBuildJobAsDone',\n      'newPlaylist',\n      'refreshPlaylist',\n      'removeEntityPreviewFromPlaylist',\n      'removeBuildJobFromList',\n      'setAssetSearch',\n      'setCurrentEpisode',\n      'setShotSearch',\n      'updatePreviewAnnotation'\n    ]),\n\n    // Helpers\n\n    formatDate (dateString) {\n      return formatDate(dateString)\n    },\n\n    getPlaylistPath (playlistId, section) {\n      return getPlaylistPath(\n        this.currentProduction.id,\n        this.currentEpisode ? this.currentEpisode.id : null,\n        playlistId,\n        section\n      )\n    },\n\n    playlistElementStyle (playlist) {\n      const taskType = this.taskTypeMap.get(playlist.task_type_id)\n      const color = taskType ? taskType.color : 'transparent'\n      return {\n        'border-left': '2px solid ' + color\n      }\n    },\n\n    getTaskStatus (entity) {\n      entity = this.shotMap.get(entity.id)\n      if (!entity) entity = this.assetMap.get(entity.id)\n      if (!entity) return {}\n\n      const taskId = entity.validations.get(this.currentPlaylist.task_type_id)\n      if (taskId) {\n        const task = this.taskMap.get(taskId)\n        if (!task) return {}\n        const taskStatus = this.taskStatusMap.get(task.task_status_id)\n        return taskStatus\n      } else {\n        return {}\n      }\n    },\n\n    // Data loading\n\n    loadShotsData (callback) {\n      if (\n        this.displayedShots.length === 0 ||\n        this.displayedShots[0].project_id !== this.currentProduction.id ||\n        (\n          this.currentEpisode &&\n          this.displayedShots[0].episode_id !== this.currentEpisode.id\n        )\n      ) {\n        if (this.isTVShow &&\n            this.currentEpisode &&\n            (this.currentEpisode.id === 'main' ||\n            this.currentEpisode.id === 'all')) {\n          callback()\n        } else {\n          this.loadShots(callback)\n        }\n      } else {\n        callback()\n      }\n    },\n\n    loadAssetsData () {\n      if (this.isTVShow || this.displayedAssets.length === 0) {\n        return this.loadAssets()\n      } else {\n        return Promise.resolve()\n      }\n    },\n\n    loadPlaylistsData (force = false) {\n      const setFirstPlaylist = () => {\n        this.setCurrentPlaylist(() => {\n          if (!this.currentPlaylist || !this.currentPlaylist.id) {\n            this.goFirstPlaylist()\n          }\n          return Promise.resolve()\n        })\n      }\n      if (this.playlists.length === 0 || force) {\n        return this.loadPlaylists({\n          sortBy: this.currentSort,\n          page: this.page,\n          taskTypeId: this.taskTypeId\n        })\n          .then(() => {\n            return setFirstPlaylist()\n          })\n          .catch(err => {\n            console.error(err)\n            this.errors.loadPlaylists = true\n            return Promise.reject(err)\n          })\n      } else {\n        return setFirstPlaylist()\n      }\n    },\n\n    onPlaylistListScroll (event, position) {\n      if (this.$options.silentMore) return\n      const listEl = this.$refs.playlistList\n      const maxHeight = listEl.scrollHeight - listEl.offsetHeight\n      if (maxHeight < (position.scrollTop + 20)) {\n        this.$options.silentMore = true\n        this.page++\n        this.loadMorePlaylists({\n          sortBy: this.currentSort,\n          page: this.page,\n          taskTypeId: this.taskTypeId\n        })\n          .then(playlists => {\n            setTimeout(() => {\n              this.$options.silentMore = false\n            }, 1000)\n          })\n          .catch(err => {\n            console.error(err)\n            this.$options.silentMore = false\n            this.errors.loadPlaylists = true\n            return Promise.reject(err)\n          })\n      }\n    },\n\n    // Playlist build\n\n    rebuildCurrentEntities () {\n      this.currentEntities = {}\n      const tmpEntities = {}\n      if (this.currentPlaylist && this.currentPlaylist.shots) {\n        this.currentPlaylist.shots.forEach((entity) => {\n          const playlistEntity = this.convertEntityToPlaylistFormat(entity)\n          if (playlistEntity) tmpEntities[playlistEntity.id] = playlistEntity\n        })\n      }\n      this.$nextTick(() => {\n        this.currentEntities = tmpEntities\n      })\n    },\n\n    convertEntityToPlaylistFormat (entityInfo) {\n      let entity\n      if (this.isAssetPlaylist) {\n        entity = this.assetMap.get(entityInfo.id)\n      } else {\n        entity = this.shotMap.get(entityInfo.id)\n      }\n      if (entity) {\n        const playlistEntity = {\n          id: entityInfo.id,\n          name: entity.name,\n          parent_name: entity.sequence_name || entity.asset_type_name,\n          preview_files: entityInfo.preview_files,\n          preview_file_id:\n            entityInfo.preview_file_id ||\n            entity.preview_file_id,\n          preview_file_extension:\n            entityInfo.preview_file_extension ||\n            entity.preview_file_extension,\n          preview_file_task_id:\n            entityInfo.task_id ||\n            entityInfo.preview_file_task_id ||\n            entity.preview_file_task_id,\n          preview_file_annotations:\n            entityInfo.preview_file_annotations ||\n            entity.preview_file_annotations,\n          preview_file_previews:\n            entityInfo.preview_file_previews ||\n            entity.preview_file_previews\n        }\n        return playlistEntity\n      } else {\n        return null\n      }\n    },\n\n    setCurrentPlaylist (callback) {\n      const playlistId = this.$route.params.playlist_id\n      const playlist = this.playlistMap.get(playlistId)\n      if (playlist) {\n        this.loading.playlist = true\n        this.loadPlaylist({\n          playlist,\n          callback: (err, playlist) => {\n            if (err) console.error(err)\n            this.currentPlaylist = playlist\n            this.rebuildCurrentEntities()\n            this.loading.playlist = false\n            if (callback) callback()\n          }\n        })\n      } else {\n        this.currentPlaylist = {\n          name: ''\n        }\n        this.currentShots = {}\n      }\n    },\n\n    addEntity (entity) {\n      return this.loadEntityPreviewFiles(entity)\n        .then(previewFiles => {\n          return this.addToStorePlaylistAndSave(previewFiles, entity)\n        })\n        .then(this.addToPlayerPlaylist)\n        .catch((err) => console.error(err))\n    },\n\n    addToStorePlaylistAndSave (previewFiles, entity) {\n      return this.pushEntityToPlaylist({\n        playlist: this.currentPlaylist,\n        previewFiles: previewFiles,\n        entity: { ...entity }\n      })\n    },\n\n    addToPlayerPlaylist (entity) {\n      const playlistEntity = this.convertEntityToPlaylistFormat(entity)\n      this.currentEntities[playlistEntity.id] = playlistEntity\n      this.playlistPlayer.entityList.push(playlistEntity)\n      this.$nextTick(() => {\n        this.playlistPlayer.scrollToRight()\n      })\n    },\n\n    addEntityToPlaylist (entity) {\n      if (!this.currentEntities[entity.id]) {\n        this.addEntity(entity)\n          .then(this.playlistPlayer.scrollToRight())\n      }\n    },\n\n    removeEntity (entity) {\n      this.removeEntityPreviewFromPlaylist({\n        playlist: this.currentPlaylist,\n        entity,\n        callback: () => {\n          delete this.currentEntities[entity.id]\n        }\n      })\n    },\n\n    clearCurrentPlaylist () {\n      this.currentPlaylist = {}\n      this.currentShots = {}\n    },\n\n    resetPlaylist () {\n      this.clearCurrentPlaylist()\n      this.setCurrentPlaylist()\n    },\n\n    // Addition Helpers\n\n    addCurrentSelection () {\n      this.$options.silent = true\n      const entities =\n        this.isAssetPlaylist ? this.displayedAssets : this.displayedShots\n      this.addEntities([...entities].reverse(), () => {\n        this.$options.silent = false\n      })\n    },\n\n    addSequence (sequenceShots) {\n      if (sequenceShots.length > 0) {\n        const sequenceId = sequenceShots[0].sequence_id\n        const shots = Array.from(this.shotMap.values())\n          .filter(s => s.sequence_id === sequenceId)\n          .sort(firstBy('name'))\n          .reverse()\n        this.$options.silent = true\n        this.addEntities(shots, () => {\n          this.$options.silent = false\n        })\n      }\n    },\n\n    addAllPending () {\n      this.$options.silent = true\n      this.loading.addWeekly = true\n      this.getPending(false)\n        .then((shots) => {\n          this.addEntities(shots.reverse(), () => {\n            this.loading.addWeekly = false\n            this.$options.silent = false\n          })\n        })\n    },\n\n    addDailyPending () {\n      this.loading.addDaily = true\n      this.$options.silent = true\n      this.getPending(true)\n        .then((shots) => {\n          this.addEntities(sortShots(shots).reverse(), () => {\n            this.loading.addDaily = false\n            this.$options.silent = false\n          })\n        })\n    },\n\n    addEpisodePending () {\n      this.loading.addEpisode = true\n      this.$options.silent = true\n      let shots = [].concat(...this.shotsByEpisode)\n      shots = sortShots(shots).reverse()\n      this.addEntities(shots, () => {\n        this.loading.addEpisode = false\n        this.$options.silent = false\n      })\n    },\n\n    addMovie () {\n      this.loading.addMovie = true\n      this.$options.silent = true\n      const shots = sortShots(Array.from(this.shotMap.values()))\n      this.addEntities(shots.reverse(), () => {\n        this.loading.addMovie = false\n        this.$options.silent = false\n      })\n    },\n\n    addEntities (entities, callback) {\n      if (entities && entities.length > 0) {\n        const entity = entities.pop()\n        this.addEntity(entity)\n          .then(() => {\n            this.addEntities(entities, callback)\n          })\n      } else {\n        callback()\n      }\n    },\n\n    // Save data\n\n    onPreviewChanged (entity, previewFileId) {\n      this.changePlaylistPreview({\n        playlist: this.currentPlaylist,\n        entity,\n        previewFileId\n      })\n    },\n\n    onOrderChange (info) {\n      this.changePlaylistOrder({\n        playlist: this.currentPlaylist,\n        info\n      })\n    },\n\n    onAnnotationChanged ({ preview, annotations }) {\n      const taskId = preview.task_id\n      this.updatePreviewAnnotation({ taskId, preview, annotations })\n    },\n\n    // Search\n\n    confirmBuildFilter (query) {\n      this.modals.isBuildFilterDisplayed = false\n      this.$refs['search-field'].setValue(query)\n      this.onSearchChange(query)\n    },\n\n    onSearchChange (searchQuery) {\n      if (searchQuery.length > 1) {\n        if (this.isAssetPlaylist) {\n          this.setAssetSearch(searchQuery)\n          this.displayMoreAssets()\n        } else {\n          this.setShotSearch(searchQuery)\n          this.displayMoreShots()\n        }\n      } else {\n        if (this.isAssetPlaylist) {\n          this.setAssetSearch('')\n        } else {\n          this.setShotSearch('')\n        }\n      }\n    },\n\n    // Playlist list\n\n    onForClientChanged (forClient) {\n      this.editPlaylist({\n        data: {\n          id: this.currentPlaylist.id,\n          for_client: forClient\n        }\n      })\n    },\n\n    runAddPlaylist (form) {\n      const newPlaylist = {\n        name: form.name,\n        production_id: this.currentProduction.id,\n        for_client: form.for_client,\n        for_entity: form.for_entity,\n        is_for_all: form.is_for_all,\n        task_type_id: form.task_type_id\n      }\n      if (this.isTVShow && this.currentEpisode) {\n        newPlaylist.episode_id = this.currentEpisode.id\n      }\n      this.loading.editPlaylist = true\n      this.errors.editPlaylist = false\n      this.newPlaylist(newPlaylist)\n        .then((playlist) => {\n          this.$router.push(this.getPlaylistPath(playlist.id))\n          this.loading.editPlaylist = false\n          this.modals.isEditDisplayed = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.editPlaylist = true\n          this.loading.editPlaylist = false\n        })\n    },\n\n    confirmEditPlaylist (form) {\n      if (this.playlistToEdit.id) {\n        form.id = this.currentPlaylist.id\n        this.runEditPlaylist(form)\n      } else {\n        this.runAddPlaylist(form)\n      }\n    },\n\n    runEditPlaylist (form) {\n      this.loading.editPlaylist = true\n      this.errors.editPlaylist = false\n      this.editPlaylist({\n        data: {\n          id: form.id,\n          for_client: form.for_client,\n          for_entity: form.for_entity,\n          name: form.name,\n          task_type_id: form.task_type_id\n        },\n        callback: (err, playlist) => {\n          if (err) this.errors.editPlaylist = true\n          this.loading.editPlaylist = false\n          this.modals.isEditDisplayed = false\n          Object.assign(this.currentPlaylist, playlist)\n        }\n      })\n    },\n\n    goFirstPlaylist () {\n      if (this.playlists.length > 0) {\n        this.$router.push({\n          name: 'playlist',\n          params: {\n            production_id: this.currentProduction.id,\n            playlist_id: this.playlists[0].id\n          }\n        })\n      } else {\n        this.$router.push(this.playlistsPath)\n      }\n    },\n\n    // Changes\n\n    toggleAddEntities () {\n      if (this.isAddingEntity) {\n        this.resetPlaylist()\n      }\n      this.isAddingEntity = !this.isAddingEntity\n    },\n\n    onTaskTypeChanged (taskTypeId) {\n      this.changePlaylistType({\n        playlist: this.currentPlaylist,\n        taskTypeId,\n        callback: () => {\n          this.rebuildCurrentEntities()\n        }\n      })\n    },\n\n    onBodyScroll (event, position) {\n      const maxHeight =\n        this.$refs.entityListContent.scrollHeight -\n        this.$refs.entityListContent.offsetHeight\n      if (maxHeight < position.scrollTop) {\n        if (this.isAssetPlaylist) {\n          this.displayMoreAssets()\n        } else {\n          this.displayMoreShots()\n        }\n      }\n    },\n\n    resetSorting () {\n      let order = 1\n      if (['created_at', 'updated_at'].includes(this.currentSort)) {\n        order = -1\n      }\n      this.sortedPlaylists = [...this.playlists]\n        .sort(\n          firstBy(this.currentSort, order)\n            .thenBy('name')\n        )\n    },\n\n    // Modals\n\n    showAddModal () {\n      this.playlistToEdit = {\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\n        for_client: false\n      }\n      this.$refs['edit-playlist-modal'] = true\n      this.modals.isEditDisplayed = true\n    },\n\n    showEditModal () {\n      this.playlistToEdit = this.currentPlaylist\n      this.modals.isEditDisplayed = true\n    },\n\n    hideEditModal () {\n      this.playlistToEdit = {\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\n        for_client: false\n      }\n      this.modals.isEditDisplayed = false\n    },\n\n    // Loading\n\n    reloadAll () {\n      if (!this.loading.playlists) {\n        this.loading.playlists = true\n        this.loadShotsData(() => {\n          this.loadAssetsData()\n            .then(() => {\n              this.page = 1\n              return this.loadPlaylistsData()\n            })\n            .then(() => {\n              this.loading.playlists = false\n              this.resetPlaylist()\n              setTimeout(() => {\n                this.loading.playlistsInit = false\n              }, 300)\n            })\n        })\n      }\n    }\n  },\n\n  mounted () {\n    // Next tick needed to ensure that current production is properly set.\n    this.$nextTick(() => {\n      this.reloadAll()\n      if (localStorage.getItem('playlist-sort')) {\n        this.currentSort = localStorage.getItem('playlist-sort')\n      }\n      this.resetSorting()\n    })\n  },\n\n  watch: {\n    $route () {\n      this.setCurrentPlaylist()\n    },\n\n    currentPlaylist () {\n      if (this.currentPlaylist.shots) {\n        this.$options.silentMore = false\n        this.isAddingEntity =\n          Object.keys(this.currentPlaylist.shots).length === 0\n      } else {\n        this.isAddingEntity = true\n      }\n    },\n\n    currentProduction () {\n      this.$store.commit('LOAD_PLAYLISTS_END', [])\n      this.reloadAll()\n    },\n\n    currentEpisode () {\n      this.$store.commit('LOAD_PLAYLISTS_END', [])\n      if (this.currentEpisode) {\n        this.reloadAll()\n      }\n    },\n\n    playlists () {\n    },\n\n    currentSort () {\n      localStorage.setItem('playlist-sort', this.currentSort)\n      this.loading.playlists = true\n      this.page = 1\n      this.loadPlaylistsData(true)\n        .then(() => {\n          this.loading.playlists = false\n        })\n    },\n\n    isListToggled () {\n      this.playlistPlayer.onWindowResize()\n    }\n  },\n\n  socket: {\n    events: {\n      'playlist:new' (eventData) {\n        if (!this.playlistMap.get(eventData.playlist_id)) {\n          this.refreshPlaylist(eventData.playlist_id)\n        }\n      },\n\n      'playlist:update' (eventData) {\n      },\n\n      'playlist:delete' (eventData) {\n        this.$store.commit('DELETE_PLAYLIST_END', {\n          id: eventData.playlist_id\n        })\n      },\n\n      'build-job:new' (eventData) {\n        if (eventData.playlist_id === this.currentPlaylist.id) {\n          this.currentPlaylist.build_jobs = [{\n            id: eventData.build_job_id,\n            created_at: eventData.created_at,\n            status: 'running',\n            playlist_id: this.currentPlaylist.id\n          }].concat(this.currentPlaylist.build_jobs)\n        }\n      },\n\n      'build-job:update' (eventData) {\n        if (eventData.playlist_id === this.currentPlaylist.id) {\n          updateModelFromList(this.currentPlaylist.build_jobs, {\n            id: eventData.build_job_id,\n            status: eventData.status\n          })\n        }\n      },\n\n      'build-job:delete' (eventData) {\n        if (eventData.playlist_id === this.currentPlaylist.id) {\n          this.currentPlaylist.build_jobs =\n            removeModelFromList(this.currentPlaylist.build_jobs, {\n              id: eventData.build_job_id\n            })\n        }\n      }\n    }\n  },\n\n  metaInfo () {\n    if (this.isTVShow) {\n      return { title: this.tvShowPageTitle }\n    } else {\n      return { title: this.shortPageTitle }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .playlist-item {\n    background: $dark-grey-lightmore;\n    box-shadow: 0px 0px 6px #333;\n    border-color: $dark-grey;\n    color: $white-grey;\n\n    &.for-client {\n      background: $purple-grey;\n      border: 1px solid $dark-grey;\n    }\n\n    &.selected {\n      border-right: 3px solid $dark-green;\n    }\n  }\n\n  .playlist-list-column {\n    background: $dark-grey-light;\n    border-color: $dark-grey;\n    box-shadow: 0px 0px 6px #333;\n  }\n\n  .playlist-column {\n    button,\n    h2.entity-group-title {\n      color: white;\n    }\n  }\n\n  .playlist-column.no-selection {\n    background: $dark-grey-light;\n\n    h2 {\n      color: white;\n    }\n\n    .recent-playlist {\n      background: $dark-grey-lightmore;\n      border: 2px solid $dark-grey;\n      box-shadow: 0px 0px 6px #333;\n\n      h3 {\n        color: white;\n      }\n    }\n  }\n\n  span.thumbnail-picture {\n    box-shadow: 0px 0px 6px #333;\n  }\n}\n\n.page {\n  display: flex;\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: 0;\n}\n\n.page .columns {\n  margin-top: 0px;\n  margin-bottom: 0;\n  overflow-y: auto;\n  flex: 1;\n}\n\n.playlist-list-column {\n  max-width: 300px;\n  background: #F4F5F9;\n  overflow-y: auto;\n  padding: 1em 1em 1em 2em;\n  border-right: 1px solid #DDD;\n  box-shadow: 0px 0px 6px #F0F0F0;\n  z-index: 201;\n}\n\n.playlist-item {\n  display: block;\n  background: white;\n  padding: 0.4em;\n  margin: 0.2em;\n  border: 1px solid $white-grey;\n  box-shadow: 0px 0px 6px #DDD;\n  color: $grey-strong;\n\n  &.for-client {\n    background: $light-purple;\n    border: 1px solid $purple;\n  }\n}\n\n.playlist-item.selected {\n  border-right: 3px solid $light-green;\n}\n\n.playlist-list-column .button {\n  width: 100%;\n}\n\n.addition-entities {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  flex-direction: row;\n  max-width: 100%;\n  padding-left: 1em;\n}\n\n.addition-shot {\n  padding: 0;\n  cursor: pointer;\n  text-align: center;\n  margin: 0;\n  opacity: 0.5;\n  width: 170px;\n  display: flex;\n  flex-direction: column;\n  border: 0px solid transparent;\n\n  a {\n    margin: auto;\n  }\n\n  &:hover {\n    opacity: 0.75\n  }\n\n  &.playlisted {\n    opacity: 1;\n\n    img,\n    span.thumbnail-picture {\n      border: 2px solid $purple;\n    }\n  }\n}\n\nspan.thumbnail-picture {\n  box-shadow: 0px 0px 6px #DDD;\n  margin-bottom: 2px;\n}\n\n.addition-header {\n  padding: 0 1em;\n\n  .subtitle {\n    margin-top: 1em;\n  }\n}\n\n.add-sequence {\n  margin-bottom: 0.4em;\n}\n\n.playlist-column {\n  padding: 0;\n  overflow: hidden;\n  flex: 1;\n  background: $dark-grey-2;\n}\n\n.playlisted-shot-name {\n  padding-right: 20px;\n  color: var(--text);\n}\n\n.playlist-date {\n  display: block;\n  color: $grey;\n  font-size: 0.8em;\n}\n\n.entity-group-title {\n  border-bottom: 1px solid $light-grey-light;\n  color: $grey;\n  margin: 1em;\n  padding-bottom: 0.2em;\n  text-transform: uppercase;\n\n  button {\n    color: $grey;\n    padding: 0.3em 0.8em;\n    font-size: 0.7em;\n  }\n}\n\n.addition-header {\n  background: var(--background);\n  height: 110px;\n}\n\n.addition-section {\n  background: var(--background);\n  overflow-y: auto;\n  height: calc(100% - 420px);\n}\n\nh2 {\n  font-weight: bold;\n  text-transform: uppercase;\n  color: $grey;\n}\n\n.toggled {\n  padding: 1em 0.1em;\n  max-width: 50px;\n\n  .flexrow {\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 1em;\n  }\n\n  .playlist-item {\n    padding: 0;\n  }\n}\n\n.playlist-column.no-selection {\n  padding: 2em;\n  overflow: auto;\n  background: #F4F5F9;\n\n  h2 {\n    font-size: 2em;\n    margin-top: 1.5em;\n    margin-bottom: 0.3em;\n  }\n\n  .recent-playlist {\n    width: 333px;\n    height: 250px;\n    background: white;\n    border: 2px solid $light-grey-light;\n    box-shadow: 0px 0px 6px #DDD;\n    border-radius: 1em;\n    padding: 1em;\n\n    h3 {\n      color: $grey-strong;\n      font-size: 1.2em;\n      font-weight: bold;\n    }\n    span {\n      display: block;\n    }\n  }\n\n  .empty-explaination {\n    color: $white;\n    margin-top: 4em;\n    font-size: 1.5em;\n  }\n\n  .big {\n    font-size: 1.2em;\n    margin-top: 1em;\n    padding: 0.5em 1em;\n    height: auto;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Playlist.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Playlist.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Playlist.vue?vue&type=template&id=5651601a&scoped=true&\"\nimport script from \"./Playlist.vue?vue&type=script&lang=js&\"\nexport * from \"./Playlist.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Playlist.vue?vue&type=style&index=0&id=5651601a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5651601a\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}