{"version":3,"sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.async-iterator.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.observable.js","webpack:///./src/components/pages/Task.vue?455f","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./src/components/widgets/PreviewRow.vue?5964","webpack:///src/components/widgets/PreviewRow.vue","webpack:///./src/components/widgets/PreviewRow.vue?2db5","webpack:///./src/components/widgets/PreviewRow.vue?1b31","webpack:///src/components/pages/Task.vue","webpack:///./src/components/pages/Task.vue?f467","webpack:///./src/components/pages/Task.vue?0cd0","webpack:///./src/components/widgets/PreviewRow.vue?8040","webpack:///./src/components/pages/Task.vue?9c32","webpack:///./node_modules/core-js/library/fn/symbol/iterator.js","webpack:///./node_modules/core-js/library/fn/symbol/index.js"],"names":["module","exports","__webpack_require__","render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","overflow-y","attrs","to","entityPage","taskEntityPath","_v","_s","currentTask","title","task-type","currentTaskType","production-id","currentProduction","id","_e","isAssigned","subscribed","isSubscribed","on","click","toggleSubscribe","$t","task","is-static","_l","personId","key","person","personMap","size","font-size","ref","is-loading","loading","addComment","is-error","errors","user","team","currentTeam","task-status","taskStatusForCurrentUser","attached-file-name","attachedFileName","add-comment","add-preview","onAddPreviewClicked","file-drop","selectFile","currentTaskComments","length","comment","index","highlighted","isHighlighted","current-user","editable","is-last","pinnedCount","pin-comment","onPinComment","edit-comment","onEditComment","delete-comment","onDeleteComment","checklist-updated","saveComment","currentTaskPreviews","isCurrentUserManager","class","button","flexrow-item","setPreview","entity","preview_file_id","currentPreviewId","preview","preview-path","previewPath","taskId","selected","isMovie","currentPreview","task-type-map","taskTypeMap","entity-preview-files","taskEntityPreviews","annotationchanged","onAnnotationChanged","href","currentPreviewDlPath","extension","preview-url","currentPreviewPath","preview-dl-path","annotation-changed","onAddExtraPreview","remove-extra-preview","showRemoveExtraPreviewModal","active","modals","addPreview","cancel-route","taskPath","form-data","addPreviewFormData","fileselected","confirm","closeAddPreviewModal","addExtraPreview","addExtraPreviewFormData","extensions","cancel","hideExtraPreviewModal","createExtraPreview","changePreview","changePreviewFormData","is-editing","editComment","comment-to-edit","commentToEdit","confirmEditTaskComment","onCancelEditComment","deleteComment","text","error-text","confirmDeleteTaskComment","onCancelDeleteComment","deleteExtraPreview","hideRemoveExtraPreviewModal","confirmDeleteTaskPreview","staticRenderFns","typeof_typeof2","obj","symbol_default","a","iterator_default","constructor","prototype","typeof_typeof","PreviewRowvue_type_template_id_f16eab4a_scoped_true_render","preview-row","has-text-center","label","path","PreviewRowvue_type_template_id_f16eab4a_scoped_true_staticRenderFns","PreviewRowvue_type_script_lang_js_","name","components","ButtonLink","props","type","Object","default","Boolean","String","computed","concat","revision","methods","widgets_PreviewRowvue_type_script_lang_js_","component","componentNormalizer","PreviewRow","Taskvue_type_script_lang_js_","AddComment","AddPreviewModal","Comment","ChevronLeftIcon","vue_feather_icons_es","DeleteModal","DownloadIcon","EditCommentModal","ImageIcon","ModelViewer","PeopleAvatar","PictureViewer","Spinner","SubscribeButton","TaskTypeName","ValidationTag","VideoPlayer","data","currentExtraPreviewId","getEntityPage","selectedTab","taskLoading","isLoading","isError","deleteTask","otherPreviews","created","clearSelectedTasks","loadTaskData","mounted","_this","handleModalsDisplay","reset","$nextTick","$refs","scrollTop","window","scrollTo","objectSpread","vuex_esm","isCommentingAllowed","_this2","assignees","find","taskTypeBorder","border","task_type_color","border-left","deleteTaskPath","isPreviews","entity_type_name","entityId","entity_id","route","params","production_id","project_id","shot_id","asset_id","$route","episode_id","entityList","_this3","displayedShots","displayedAssets","previousEntity","_this4","_ret","taskTypeId","task_type_id","entityIndex","findIndex","firstTraversal","previousEntityIndex","tasks","ctaskId","taskMap","v","nextEntity","_this5","_ret2","nextEntityIndex","entityName","full_entity_name","entity_name","isSingleEpisode","split","splice","join","windowTitle","taskTypeName","task_type_name","deleteText","taskType","previewId","preview_id","moviePath","_this6","some","assigneeId","isPreviewButtonVisible","includes","isDlPreviewFile","_this7","map","filter","c","pinned","isTVShow","currentEpisode","_this8","getCurrentTask","loadTaskComments","task_id","callback","err","getCurrentTaskComments","getCurrentTaskPreviews","setOtherPreviews","getOriginalPath","getOriginalDlPath","loadTaskSubscribed","console","log","loadTask","loadingFunction","loadAssets","loadEpisodes","setCurrentEpisode","episode","loadShots","getCurrentComment","comment_id","getTaskComment","getTaskComments","getTaskPreviews","getCurrentTaskPath","getPreviewPath","taskStatusId","_this9","finalize","resetPreview","commentText","commentTaskWithPreview","commentTask","$store","state","indexOf","formData","loadPreviewFileFormData","get","createPreview","_this10","addCommentPreview","commentId","_this11","previews","p","addCommentExtraPreview","setTimeout","displayLast","_this12","changeCommentPreview","$router","push","_this13","dispatch","_this14","confirmDeleteTask","_this15","_this16","editTaskComment","checklist","_this17","deleteTaskComment","_this18","displayFirst","deleteTaskPreview","then","catch","error","onPreviewAdded","eventData","getters","commit","unsubscribeFromTask","subscribeToTask","section","arguments","undefined","_ref","annotations","updatePreviewAnnotation","pinComment","watch","socket","events","preview-file:add-file","preview_file:update","_this19","refreshPreview","isDrawing","reloadAnnotations","metaInfo","pages_Taskvue_type_script_lang_js_","Task_component","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PreviewRow_vue_vue_type_style_index_0_id_f16eab4a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PreviewRow_vue_vue_type_style_index_0_id_f16eab4a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Task_vue_vue_type_style_index_0_id_7d21cefc_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Task_vue_vue_type_style_index_0_id_7d21cefc_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","f","Symbol"],"mappings":"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","file":"js/chunk-1a65860b.fc989842.js","sourcesContent":["module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"core-js/library/fn/symbol\");","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page fixed-page\"},[_c('div',{staticStyle:{\"overflow-y\":\"auto\"}},[_c('div',{staticClass:\"page-header\"},[(_vm.currentTask)?_c('div',{staticClass:\"flexrow header-title\"},[_c('router-link',{staticClass:\"flexrow-item has-text-centered back-link\",attrs:{\"to\":_vm.entityPage}},[_c('chevron-left-icon')],1),_c('div',{staticClass:\"title flexrow-item\"},[_c('router-link',{attrs:{\"to\":_vm.taskEntityPath}},[_vm._v(\"\\n          \"+_vm._s(_vm.currentTask ? _vm.title : 'Loading...')+\"\\n        \")])],1),(_vm.currentTaskType)?_c('task-type-name',{staticClass:\"flexrow-item task-type\",attrs:{\"task-type\":_vm.currentTaskType,\"production-id\":_vm.currentProduction.id}}):_vm._e(),(!_vm.isAssigned)?_c('subscribe-button',{staticClass:\"flexrow-item action-button\",attrs:{\"subscribed\":_vm.isAssigned || _vm.isSubscribed},on:{\"click\":_vm.toggleSubscribe}}):_vm._e()],1):_vm._e(),(_vm.currentTask)?_c('div',{staticClass:\"flexrow task-information\"},[_c('span',{staticClass:\"flexrow-item\"},[_vm._v(_vm._s(_vm.$t('tasks.current_status')))]),(_vm.currentTask)?_c('validation-tag',{staticClass:\"is-medium flexrow-item\",attrs:{\"task\":_vm.currentTask,\"is-static\":true}}):_vm._e(),_c('span',{staticClass:\"flexrow-item\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.assignees'))+\":\")]),_vm._l((_vm.currentTask.assignees),function(personId){return _c('span',{key:personId,staticClass:\"flexrow-item avatar-wrapper\"},[_c('people-avatar',{key:personId,staticClass:\"flexrow-item\",attrs:{\"person\":_vm.personMap[personId],\"size\":30,\"font-size\":16}})],1)})],2):_vm._e()]),_c('div',{ref:\"task-columns\",staticClass:\"task-columns\"},[_c('div',{staticClass:\"task-column comments-column\"},[(_vm.currentTask)?_c('div',[_c('div',[(_vm.isCommentingAllowed)?_c('add-comment',{attrs:{\"is-loading\":_vm.loading.addComment,\"is-error\":_vm.errors.addComment,\"user\":_vm.user,\"team\":_vm.currentTeam,\"task\":_vm.currentTask,\"task-status\":_vm.taskStatusForCurrentUser,\"attached-file-name\":_vm.attachedFileName},on:{\"add-comment\":_vm.addComment,\"add-preview\":_vm.onAddPreviewClicked,\"file-drop\":_vm.selectFile}}):_vm._e(),(_vm.currentTaskComments && _vm.currentTaskComments.length > 0)?_c('div',{staticClass:\"comments\"},_vm._l((_vm.currentTaskComments),function(comment,index){return _c('comment',{key:comment.id,attrs:{\"comment\":comment,\"highlighted\":_vm.isHighlighted(comment),\"current-user\":_vm.user,\"editable\":comment.person && _vm.user.id === comment.person.id,\"is-last\":index === _vm.pinnedCount},on:{\"pin-comment\":_vm.onPinComment,\"edit-comment\":_vm.onEditComment,\"delete-comment\":_vm.onDeleteComment,\"checklist-updated\":_vm.saveComment}})}),1):_c('div',{staticClass:\"no-comment\"},[_c('em',[_vm._v(\"\\n              \"+_vm._s(_vm.$t('tasks.no_comment'))+\"\\n            \")])])],1)]):_c('div',{staticClass:\"has-text-centered\"},[_c('spinner')],1)]),_c('div',{staticClass:\"task-column preview-column\"},[_c('div',{staticClass:\"preview-column-content\"},[_c('div',{staticClass:\"flexrow preview-header\"},[_c('h2',{staticClass:\"subtitle flexrow-item\"},[_vm._v(\"\\n            \"+_vm._s(_vm.$t('tasks.preview'))+\"\\n          \")]),(_vm.isPreviewButtonVisible)?_c('div',{staticClass:\"set-main-preview flexrow-item flexrow pull-right\"},[(_vm.currentTaskPreviews && _vm.currentTaskPreviews.length > 0 && _vm.isCurrentUserManager)?_c('button',{class:{\n                button: true,\n                'flexrow-item': true,\n                'is-loading': _vm.loading.setPreview\n              },on:{\"click\":_vm.setPreview}},[_c('image-icon',{staticClass:\"icon\"}),_c('span',{staticClass:\"text\"},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tasks.set_preview'))+\"\\n              \")])],1):_vm._e(),(_vm.errors.setPreview)?_c('span',{staticClass:\"error flexrow-item\"},[_vm._v(\"\\n              \"+_vm._s(_vm.$t('tasks.set_preview_error'))+\"\\n            \")]):_vm._e()]):_vm._e(),(_vm.currentTask && _vm.currentTask.entity && _vm.currentTask.entity.preview_file_id === _vm.currentPreviewId)?_c('div',{staticClass:\"set-main-preview flexrow-item pull-right\"},[_c('em',[_vm._v(_vm._s(_vm.$t('tasks.set_preview_done')))])]):_vm._e()]),(_vm.isPreviews)?_c('div',{staticClass:\"preview-list mt2\"},_vm._l((_vm.currentTaskPreviews),function(preview){return _c('preview-row',{key:preview.id,attrs:{\"preview\":preview,\"preview-path\":_vm.previewPath(preview.id),\"taskId\":_vm.currentTask ? _vm.currentTask.id : '',\"selected\":preview.id === _vm.currentPreviewId}})}),1):_c('div',[_c('em',[_vm._v(\"\\n            \"+_vm._s(_vm.$t('tasks.no_preview'))+\"\\n          \")])]),_c('div',{staticClass:\"preview-picture\"},[(_vm.currentTaskPreviews && _vm.currentTaskPreviews.length > 0 && _vm.isMovie)?_c('div',[_c('video-player',{ref:\"preview-movie\",attrs:{\"preview\":_vm.currentPreview,\"task-type-map\":_vm.taskTypeMap,\"entity-preview-files\":_vm.taskEntityPreviews},on:{\"annotationchanged\":_vm.onAnnotationChanged}})],1):(_vm.isDlPreviewFile)?_c('a',{ref:\"preview-file\",staticClass:\"button mt2\",attrs:{\"href\":_vm.currentPreviewDlPath}},[_c('download-icon',{staticClass:\"icon\"}),_c('span',{staticClass:\"text\"},[_vm._v(\"\\n              \"+_vm._s(_vm.$t('tasks.download_pdf_file', {extension: _vm.extension}))+\"\\n            \")])],1):(_vm.currentTaskPreviews && _vm.currentTaskPreviews.length > 0 && _vm.extension === 'obj')?_c('model-viewer',{attrs:{\"preview-url\":_vm.currentPreviewPath,\"preview-dl-path\":_vm.currentPreviewDlPath}}):(_vm.currentTaskPreviews && _vm.currentTaskPreviews.length > 0 && _vm.extension === 'png')?_c('picture-viewer',{ref:\"preview-picture\",attrs:{\"preview\":_vm.currentPreview},on:{\"annotation-changed\":_vm.onAnnotationChanged,\"add-preview\":_vm.onAddExtraPreview,\"remove-extra-preview\":_vm.showRemoveExtraPreviewModal}}):_vm._e()],1)])])]),_c('add-preview-modal',{ref:\"add-preview-modal\",attrs:{\"active\":_vm.modals.addPreview,\"is-loading\":_vm.loading.addPreview,\"is-error\":_vm.errors.addPreview,\"cancel-route\":_vm.taskPath(),\"form-data\":_vm.addPreviewFormData},on:{\"fileselected\":_vm.selectFile,\"confirm\":_vm.closeAddPreviewModal}}),_c('add-preview-modal',{ref:\"add-extra-preview-modal\",attrs:{\"active\":_vm.modals.addExtraPreview,\"is-loading\":_vm.loading.addExtraPreview,\"is-error\":_vm.errors.addExtraPreview,\"form-data\":_vm.addExtraPreviewFormData,\"extensions\":\".png,.jpg,.jpeg\"},on:{\"cancel\":_vm.hideExtraPreviewModal,\"fileselected\":_vm.selectFile,\"confirm\":_vm.createExtraPreview}}),_c('add-preview-modal',{ref:\"change-preview-modal\",attrs:{\"active\":_vm.modals.changePreview,\"is-loading\":_vm.loading.changePreview,\"is-error\":_vm.errors.changePreview,\"cancel-route\":_vm.taskPath(),\"form-data\":_vm.changePreviewFormData,\"is-editing\":true},on:{\"fileselected\":_vm.selectFile,\"confirm\":_vm.changePreview}}),_c('edit-comment-modal',{attrs:{\"active\":_vm.modals.editComment,\"is-loading\":_vm.loading.editComment,\"is-error\":_vm.errors.editComment,\"comment-to-edit\":_vm.commentToEdit,\"team\":_vm.currentTeam},on:{\"confirm\":_vm.confirmEditTaskComment,\"cancel\":_vm.onCancelEditComment}}),_c('delete-modal',{attrs:{\"active\":_vm.modals.deleteComment,\"is-loading\":_vm.loading.deleteComment,\"is-error\":_vm.errors.deleteComment,\"text\":_vm.$t('tasks.delete_comment'),\"error-text\":_vm.$t('tasks.delete_comment_error')},on:{\"confirm\":_vm.confirmDeleteTaskComment,\"cancel\":_vm.onCancelDeleteComment}}),_c('delete-modal',{attrs:{\"active\":_vm.modals.deleteExtraPreview,\"is-loading\":_vm.loading.deleteExtraPreview,\"is-error\":_vm.errors.deleteExtraPreview,\"text\":_vm.$t('tasks.delete_preview'),\"error-text\":_vm.$t('tasks.delete_preview_error')},on:{\"cancel\":_vm.hideRemoveExtraPreviewModal,\"confirm\":_vm.confirmDeleteTaskPreview}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\nimport _Symbol from \"../../core-js/symbol\";\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:{\n  'preview-row': true,\n  'has-text-center': true,\n  selected: _vm.selected\n}},[_c('button-link',{attrs:{\"text\":_vm.label,\"path\":_vm.previewPath}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div :class=\"{\n  'preview-row': true,\n  'has-text-center': true,\n  selected: selected\n}\">\n  <button-link\n    :text=\"label\"\n    :path=\"previewPath\"\n  >\n  </button-link>\n</div>\n</template>\n\n<script>\nimport ButtonLink from './ButtonLink.vue'\n\nexport default {\n  name: 'preview-row',\n  components: {\n    ButtonLink\n  },\n  props: {\n    preview: {\n      type: Object,\n      default: () => {}\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    },\n    taskId: {\n      type: String,\n      default: ''\n    },\n\n    previewPath: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  computed: {\n    label () {\n      let label = `v${this.preview.revision}`\n      return label\n    }\n  },\n  methods: {\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.preview-row {\n  margin-right: 0.5em;\n}\n\n.preview-row a {\n  border: 3px solid $light-grey;\n}\n\n.preview-row:hover a {\n  border: 3px solid #E1D4F9;\n}\n\n.preview-row.selected a {\n  border: 3px solid #8F91EB;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreviewRow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreviewRow.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PreviewRow.vue?vue&type=template&id=f16eab4a&scoped=true&\"\nimport script from \"./PreviewRow.vue?vue&type=script&lang=js&\"\nexport * from \"./PreviewRow.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PreviewRow.vue?vue&type=style&index=0&id=f16eab4a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f16eab4a\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"page fixed-page\">\n  <div style=\"overflow-y: auto;\">\n    <div class=\"page-header\">\n      <div\n        class=\"flexrow header-title\"\n        v-if=\"currentTask\"\n      >\n        <router-link\n          :to=\"entityPage\"\n          class=\"flexrow-item has-text-centered back-link\"\n        >\n          <chevron-left-icon />\n        </router-link>\n        <div class=\"title flexrow-item\">\n          <router-link :to=\"taskEntityPath\">\n            {{ currentTask ? title : 'Loading...'}}\n          </router-link>\n        </div>\n        <task-type-name\n          class=\"flexrow-item task-type\"\n          :task-type=\"currentTaskType\"\n          :production-id=\"currentProduction.id\"\n          v-if=\"currentTaskType\"\n        />\n        <subscribe-button\n          class=\"flexrow-item action-button\"\n          :subscribed=\"isAssigned || isSubscribed\"\n          @click=\"toggleSubscribe\"\n          v-if=\"!isAssigned\"\n        />\n      </div>\n\n      <div\n        class=\"flexrow task-information\"\n        v-if=\"currentTask\"\n      >\n        <span class=\"flexrow-item\">{{ $t('tasks.current_status') }}</span>\n        <validation-tag\n          class=\"is-medium flexrow-item\"\n          :task=\"currentTask\"\n          :is-static=\"true\"\n          v-if=\"currentTask\"\n        />\n        <span class=\"flexrow-item\">{{ $t('tasks.fields.assignees') }}:</span>\n        <span\n          class=\"flexrow-item avatar-wrapper\"\n          :key=\"personId\"\n          v-for=\"personId in currentTask.assignees\"\n        >\n          <people-avatar\n            class=\"flexrow-item\"\n            :key=\"personId\"\n            :person=\"personMap[personId]\"\n            :size=\"30\"\n            :font-size=\"16\"\n          />\n       </span>\n      </div>\n    </div>\n\n    <div class=\"task-columns\" ref=\"task-columns\">\n      <div class=\"task-column comments-column\">\n        <div v-if=\"currentTask\">\n          <div>\n            <add-comment\n              :is-loading=\"loading.addComment\"\n              :is-error=\"errors.addComment\"\n              :user=\"user\"\n              :team=\"currentTeam\"\n              :task=\"currentTask\"\n              :task-status=\"taskStatusForCurrentUser\"\n              :attached-file-name=\"attachedFileName\"\n              @add-comment=\"addComment\"\n              @add-preview=\"onAddPreviewClicked\"\n              @file-drop=\"selectFile\"\n              v-if=\"isCommentingAllowed\"\n            />\n            <div class=\"comments\" v-if=\"currentTaskComments && currentTaskComments.length > 0\">\n              <comment\n                :comment=\"comment\"\n                :highlighted=\"isHighlighted(comment)\"\n                :key=\"comment.id\"\n                :current-user=\"user\"\n                :editable=\"comment.person && user.id === comment.person.id\"\n                :is-last=\"index === pinnedCount\"\n                @pin-comment=\"onPinComment\"\n                @edit-comment=\"onEditComment\"\n                @delete-comment=\"onDeleteComment\"\n                @checklist-updated=\"saveComment\"\n                v-for=\"(comment, index) in currentTaskComments\"\n              />\n            </div>\n            <div class=\"no-comment\" v-else>\n              <em>\n                {{ $t('tasks.no_comment')}}\n              </em>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"has-text-centered\" v-else>\n          <spinner />\n        </div>\n      </div>\n\n      <div class=\"task-column preview-column\">\n        <div class=\"preview-column-content\">\n          <div class=\"flexrow preview-header\">\n            <h2 class=\"subtitle flexrow-item\">\n              {{ $t('tasks.preview') }}\n            </h2>\n            <div\n              class=\"set-main-preview flexrow-item flexrow pull-right\"\n              v-if=\"isPreviewButtonVisible\"\n            >\n              <button\n                :class=\"{\n                  button: true,\n                  'flexrow-item': true,\n                  'is-loading': loading.setPreview\n                }\"\n                @click=\"setPreview\"\n                v-if=\"currentTaskPreviews && currentTaskPreviews.length > 0 && isCurrentUserManager\"\n              >\n                <image-icon class=\"icon\" />\n                <span class=\"text\">\n                  {{ $t('tasks.set_preview') }}\n                </span>\n              </button>\n              <span class=\"error flexrow-item\" v-if=\"errors.setPreview\">\n                {{ $t('tasks.set_preview_error') }}\n              </span>\n            </div>\n            <div\n              class=\"set-main-preview flexrow-item pull-right\"\n              v-if=\"currentTask && currentTask.entity && currentTask.entity.preview_file_id === currentPreviewId\">\n              <em>{{ $t('tasks.set_preview_done') }}</em>\n            </div>\n          </div>\n\n          <div\n            class=\"preview-list mt2\"\n            v-if=\"isPreviews\"\n          >\n            <preview-row\n              :key=\"preview.id\"\n              :preview=\"preview\"\n              :preview-path=\"previewPath(preview.id)\"\n              :taskId=\"currentTask ? currentTask.id : ''\"\n              :selected=\"preview.id === currentPreviewId\"\n              v-for=\"preview in currentTaskPreviews\"\n            />\n          </div>\n          <div v-else>\n            <em>\n              {{ $t('tasks.no_preview')}}\n            </em>\n          </div>\n\n          <div class=\"preview-picture\">\n            <div\n              v-if=\"currentTaskPreviews && currentTaskPreviews.length > 0 && isMovie\"\n            >\n              <video-player\n                :preview=\"currentPreview\"\n                :task-type-map=\"taskTypeMap\"\n                :entity-preview-files=\"taskEntityPreviews\"\n                @annotationchanged=\"onAnnotationChanged\"\n                ref=\"preview-movie\"\n              />\n            </div>\n\n            <a\n              class=\"button mt2\"\n              ref=\"preview-file\"\n              :href=\"currentPreviewDlPath\"\n              v-else-if=\"isDlPreviewFile\"\n            >\n              <download-icon class=\"icon\" />\n              <span class=\"text\">\n                {{ $t('tasks.download_pdf_file', {extension}) }}\n              </span>\n            </a>\n\n            <model-viewer\n              :preview-url=\"currentPreviewPath\"\n              :preview-dl-path=\"currentPreviewDlPath\"\n              v-else-if=\"currentTaskPreviews && currentTaskPreviews.length > 0 && extension === 'obj'\"\n            />\n\n            <picture-viewer\n              :preview=\"currentPreview\"\n              @annotation-changed=\"onAnnotationChanged\"\n              @add-preview=\"onAddExtraPreview\"\n              @remove-extra-preview=\"showRemoveExtraPreviewModal\"\n              ref=\"preview-picture\"\n              v-else-if=\"currentTaskPreviews && currentTaskPreviews.length > 0 && extension === 'png'\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <add-preview-modal\n      ref=\"add-preview-modal\"\n      :active=\"modals.addPreview\"\n      :is-loading=\"loading.addPreview\"\n      :is-error=\"errors.addPreview\"\n      :cancel-route=\"taskPath()\"\n      :form-data=\"addPreviewFormData\"\n      @fileselected=\"selectFile\"\n      @confirm=\"closeAddPreviewModal\"\n    />\n\n    <add-preview-modal\n      ref=\"add-extra-preview-modal\"\n      :active=\"modals.addExtraPreview\"\n      :is-loading=\"loading.addExtraPreview\"\n      :is-error=\"errors.addExtraPreview\"\n      :form-data=\"addExtraPreviewFormData\"\n      extensions=\".png,.jpg,.jpeg\"\n      @cancel=\"hideExtraPreviewModal\"\n      @fileselected=\"selectFile\"\n      @confirm=\"createExtraPreview\"\n    />\n\n    <add-preview-modal\n      ref=\"change-preview-modal\"\n      :active=\"modals.changePreview\"\n      :is-loading=\"loading.changePreview\"\n      :is-error=\"errors.changePreview\"\n      :cancel-route=\"taskPath()\"\n      :form-data=\"changePreviewFormData\"\n      :is-editing=\"true\"\n      @fileselected=\"selectFile\"\n      @confirm=\"changePreview\"\n    />\n\n    <edit-comment-modal\n      :active=\"modals.editComment\"\n      :is-loading=\"loading.editComment\"\n      :is-error=\"errors.editComment\"\n      :comment-to-edit=\"commentToEdit\"\n      :team=\"currentTeam\"\n      @confirm=\"confirmEditTaskComment\"\n      @cancel=\"onCancelEditComment\"\n    />\n\n    <delete-modal\n      :active=\"modals.deleteComment\"\n      :is-loading=\"loading.deleteComment\"\n      :is-error=\"errors.deleteComment\"\n      :text=\"$t('tasks.delete_comment')\"\n      :error-text=\"$t('tasks.delete_comment_error')\"\n      @confirm=\"confirmDeleteTaskComment\"\n      @cancel=\"onCancelDeleteComment\"\n    />\n\n    <delete-modal\n      :active=\"modals.deleteExtraPreview\"\n      :is-loading=\"loading.deleteExtraPreview\"\n      :is-error=\"errors.deleteExtraPreview\"\n      :text=\"$t('tasks.delete_preview')\"\n      :error-text=\"$t('tasks.delete_preview_error')\"\n      @cancel=\"hideRemoveExtraPreviewModal\"\n      @confirm=\"confirmDeleteTaskPreview\"\n    />\n  </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport {\n  ChevronLeftIcon,\n  DownloadIcon,\n  ImageIcon\n} from 'vue-feather-icons'\n\nimport AddComment from '../widgets/AddComment'\nimport AddPreviewModal from '../modals/AddPreviewModal'\nimport Comment from '../widgets/Comment'\nimport DeleteModal from '../modals/DeleteModal'\nimport EditCommentModal from '../modals/EditCommentModal'\nimport ModelViewer from '../previews/ModelViewer'\nimport PeopleAvatar from '../widgets/PeopleAvatar'\nimport PictureViewer from '../previews/PictureViewer'\nimport PreviewRow from '../widgets/PreviewRow'\nimport Spinner from '../widgets/Spinner'\nimport SubscribeButton from '../widgets/SubscribeButton'\nimport TaskTypeName from '../widgets/TaskTypeName'\nimport ValidationTag from '../widgets/ValidationTag'\nimport VideoPlayer from '../previews/VideoPlayer'\n\nexport default {\n  name: 'task',\n  components: {\n    AddComment,\n    AddPreviewModal,\n    Comment,\n    ChevronLeftIcon,\n    DeleteModal,\n    DownloadIcon,\n    EditCommentModal,\n    ImageIcon,\n    ModelViewer,\n    PeopleAvatar,\n    PreviewRow,\n    PictureViewer,\n    Spinner,\n    SubscribeButton,\n    TaskTypeName,\n    ValidationTag,\n    VideoPlayer\n  },\n\n  data () {\n    return {\n      attachedFileName: '',\n      currentPreviewId: null,\n      currentExtraPreviewId: null,\n      entityPage: this.getEntityPage(),\n      selectedTab: 'validation',\n      taskLoading: {\n        isLoading: true,\n        isError: false\n      },\n      modals: {\n        addPreview: false,\n        addExtraPreview: false,\n        deleteExtraPreview: false,\n        changePreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      loading: {\n        addComment: false,\n        addPreview: false,\n        addExtraPreview: false,\n        changePreview: false,\n        setPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      errors: {\n        addComment: false,\n        addPreview: false,\n        addExtraPreview: false,\n        changePreview: false,\n        setPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      currentTask: null,\n      currentTaskComments: [],\n      currentTaskPreviews: [],\n      commentToEdit: null,\n      otherPreviews: [],\n      addPreviewFormData: null,\n      addExtraPreviewFormData: null,\n      changePreviewFormData: null,\n      isSubscribed: false,\n      currentPreviewPath: '',\n      currentPreviewDlPath: ''\n    }\n  },\n\n  created () {\n    this.clearSelectedTasks()\n    this.loadTaskData()\n  },\n\n  mounted () {\n    this.handleModalsDisplay()\n    this.reset()\n    this.$nextTick(() => {\n      if (this.$refs['task-columns']) {\n        this.$refs['task-columns'].scrollTop = 100\n        window.scrollTo(0, 0)\n      }\n    })\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'displayedShots',\n      'displayedAssets',\n      'getTaskComments',\n      'getTaskPreviews',\n      'getTaskComment',\n      'isCurrentUserManager',\n      'isSingleEpisode',\n      'isTVShow',\n      'personMap',\n      'productionMap',\n      'route',\n      'taskEntityPreviews',\n      'taskStatus',\n      'taskStatusForCurrentUser',\n      'taskMap',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    isCommentingAllowed () {\n      return this.isCurrentUserManager || this.currentTask.assignees.find(\n        (personId) => personId === this.user.id\n      )\n    },\n\n    taskTypeBorder () {\n      let border = 'transparent'\n      if (this.currentTask) border = this.currentTask.task_type_color\n      return {\n        'border-left': `4px solid ${border}`\n      }\n    },\n\n    deleteTaskPath () {\n      return this.taskPath(this.currentTask, 'task-delete')\n    },\n\n    isPreviews () {\n      return this.currentTaskPreviews && this.currentTaskPreviews.length > 0\n    },\n\n    taskEntityPath () {\n      if (this.currentTask) {\n        const type = this.currentTask.entity_type_name\n        let entityId = ''\n        if (this.currentTask.entity) {\n          entityId = this.currentTask.entity.id\n        } else {\n          entityId = this.currentTask.entity_id\n        }\n\n        let route = {\n          name: type === 'Shot' ? 'shot' : 'asset',\n          params: {\n            production_id: this.currentTask.project_id\n          }\n        }\n\n        if (type === 'Shot') {\n          route.params.shot_id = entityId\n        } else {\n          route.params.asset_id = entityId\n        }\n\n        if (this.$route.params.episode_id) {\n          route.name = `episode-${route.name}`\n          route.params.episode_id = this.$route.params.episode_id\n        }\n\n        return route\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    entityList () {\n      let entity = this.displayedShots.find((entity) => {\n        return entity.id === this.currentTask.entity_id\n      })\n      if (entity) {\n        return this.displayedShots\n      } else {\n        return this.displayedAssets\n      }\n    },\n\n    previousEntity () {\n      if (this.currentTask) {\n        const taskTypeId = this.currentTask.task_type_id\n        let entityIndex = this.entityList.findIndex((entity) => {\n          return entity.id === this.currentTask.entity_id\n        })\n        let firstTraversal = false\n\n        let previousEntityIndex = entityIndex - 1\n        if (previousEntityIndex < 0) {\n          previousEntityIndex = this.entityList.length - 1\n        }\n\n        let taskId = null\n        while (!taskId) {\n          if (this.entityList[previousEntityIndex]) {\n            const entity = this.entityList[previousEntityIndex]\n            taskId = entity.tasks.find((ctaskId) => {\n              const task = this.taskMap[ctaskId]\n              if (task) {\n                return task.task_type_id === taskTypeId\n              } else {\n                return false\n              }\n            })\n          } else {\n            taskId = this.currentTask.id\n          }\n\n          if (!taskId) {\n            previousEntityIndex--\n            if (previousEntityIndex < 0) {\n              previousEntityIndex = this.entityList.length\n              if (firstTraversal) {\n                return null\n              }\n              firstTraversal = true\n            }\n          }\n        }\n\n        return this.taskPath({ id: taskId })\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    nextEntity () {\n      if (this.currentTask) {\n        const taskTypeId = this.currentTask.task_type_id\n        let firstTraversal = false\n        let entityIndex = this.entityList.findIndex((entity) => {\n          return entity.id === this.currentTask.entity_id\n        })\n\n        let nextEntityIndex = entityIndex + 1\n        if (nextEntityIndex >= this.entityList.length) {\n          nextEntityIndex = 0\n        }\n\n        let taskId = null\n        while (!taskId) {\n          if (this.entityList[nextEntityIndex]) {\n            const entity = this.entityList[nextEntityIndex]\n            taskId = entity.tasks.find((ctaskId) => {\n              const task = this.taskMap[ctaskId]\n              if (task) {\n                return task.task_type_id === taskTypeId\n              } else {\n                return false\n              }\n            })\n          } else {\n            taskId = this.currentTask.id\n          }\n\n          if (!taskId) {\n            nextEntityIndex++\n            if (nextEntityIndex >= this.entityList.length) {\n              nextEntityIndex = 0\n\n              if (firstTraversal) {\n                return null\n              }\n              firstTraversal = true\n            }\n          }\n        }\n\n        return this.taskPath({ id: taskId })\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    title () {\n      if (this.currentTask) {\n        const type = this.currentTask.entity_type_name\n        let entityName =\n          this.currentTask.full_entity_name || this.currentTask.entity_name\n        if (this.isSingleEpisode && type === 'Shot') {\n          entityName = entityName\n            .split('/')\n            .splice(1)\n            .join('/')\n        }\n        return `${entityName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    windowTitle () {\n      if (this.currentTask) {\n        const taskTypeName = this.currentTask.task_type_name\n        return `${this.title} / ${taskTypeName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    deleteText () {\n      if (this.currentTask) {\n        const taskType = this.taskTypeMap[this.currentTask.task_type_id]\n        return this.$t('main.delete_text', {\n          name: `${this.currentTask.entity_name} / ${taskType.name}`\n        })\n      } else {\n        return ''\n      }\n    },\n\n    isMovie () {\n      if (this.currentTaskPreviews) {\n        let previewId = this.route.params.preview_id\n        let currentPreview = this.currentTaskPreviews[0]\n        if (previewId) {\n          currentPreview = this.currentTaskPreviews.find((preview) => {\n            return preview.id === previewId\n          })\n        }\n        return currentPreview && currentPreview.extension === 'mp4'\n      } else {\n        return false\n      }\n    },\n\n    extension () {\n      if (this.currentTaskPreviews) {\n        let previewId = this.route.params.preview_id\n        let currentPreview = this.currentTaskPreviews[0]\n        if (previewId) {\n          currentPreview = this.currentTaskPreviews.find((preview) => {\n            return preview.id === previewId\n          })\n        }\n        return currentPreview ? currentPreview.extension : ''\n      } else {\n        return ''\n      }\n    },\n\n    moviePath () {\n      let previewId = this.route.params.preview_id\n      if (!previewId && this.currentTaskPreviews) {\n        previewId = this.currentTaskPreviews[0].id\n      }\n      return `/api/movies/originals/preview-files/${previewId}.mp4`\n    },\n\n    isAssigned () {\n      if (this.currentTask) {\n        return this.currentTask.assignees.some((assigneeId) => {\n          return assigneeId === this.user.id\n        })\n      } else {\n        return false\n      }\n    },\n\n    isPreviewButtonVisible () {\n      return (\n        this.currentTask &&\n        this.currentTask.entity &&\n        this.currentTask.entity.preview_file_id !== this.currentPreviewId &&\n        ['png', 'mp4'].includes(this.extension)\n      )\n    },\n\n    isDlPreviewFile () {\n      return this.currentTaskPreviews &&\n        ['pdf', 'ma', 'mb', 'rar', 'zip'].includes(this.extension)\n    },\n\n    currentTaskType () {\n      if (this.currentTask) {\n        return this.taskTypeMap[this.currentTask.task_type_id]\n      } else {\n        return null\n      }\n    },\n\n    currentPreview () {\n      let currentPreview = this.currentTaskPreviews[0]\n      let previewId = this.route.params.preview_id\n      if (previewId) {\n        currentPreview = this.currentTaskPreviews.find((preview) => {\n          return preview.id === previewId\n        })\n      }\n      return currentPreview\n    },\n\n    currentTeam () {\n      return this.currentProduction.team.map(id => this.personMap[id])\n    },\n\n    pinnedCount () {\n      return this.currentTaskComments.filter(c => c.pinned).length\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'addCommentPreview',\n      'addCommentExtraPreview',\n      'commentTask',\n      'commentTaskWithPreview',\n      'changeCommentPreview',\n      'clearSelectedTasks',\n      'deleteTask',\n      'deleteTaskPreview',\n      'deleteTaskComment',\n      'editTaskComment',\n      'loadEpisodes',\n      'loadTask',\n      'loadShots',\n      'loadAssets',\n      'loadPreviewFileFormData',\n      'loadTaskComments',\n      'loadTaskSubscribed',\n      'refreshPreview',\n      'pinComment',\n      'subscribeToTask',\n      'setCurrentEpisode',\n      'unsubscribeFromTask',\n      'updatePreviewAnnotation'\n    ]),\n\n    getEntityPage () {\n      if (this.currentTask) {\n        let route = {\n          name: this.$route.params.type,\n          params: { production_id: this.currentTask.project_id }\n        }\n\n        if (route.name === 'asset') {\n          route.params.asset_id = this.currentTask.entity_id\n        } else {\n          route.params.shot_id = this.currentTask.entity_id\n        }\n\n        if (this.isTVShow) {\n          route.name = `episode-${route.name}`\n          route.params.episode_id =\n            this.currentEpisode ? this.currentEpisode.id : this.$route.params.episode_id\n        }\n        return route\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    loadTaskData () {\n      let task = this.getCurrentTask()\n      if (!task) {\n        this.taskLoading = {\n          isLoading: true,\n          isError: false\n        }\n\n        this.loadTask({\n          taskId: this.route.params.task_id,\n          callback: (err, task) => {\n            if (err) console.log(err)\n\n            let loadingFunction = this.loadAssets\n\n            if (task.entity_type_name === 'Shot') {\n              loadingFunction = (callback) => {\n                this.loadEpisodes(() => {\n                  if (this.isTVShow) {\n                    this.setCurrentEpisode(task.episode.id)\n                  }\n                  this.loadShots(callback)\n                })\n              }\n            }\n            loadingFunction(() => {\n              this.currentTask = task\n              this.loadTaskComments({\n                taskId: task.id,\n                entityId: task.entity_id,\n                callback: (err) => {\n                  if (err) {\n                    this.taskLoading = {\n                      isLoading: false,\n                      isError: true\n                    }\n                  } else {\n                    this.reset()\n                    this.entityPage = this.getEntityPage()\n                    this.taskLoading = {\n                      isLoading: false,\n                      isError: false\n                    }\n                    this.loadTaskSubscribed({\n                      taskId: this.route.params.task_id,\n                      callback: (err, subscribed) => {\n                        if (err) console.log(err)\n                        this.isSubscribed = subscribed\n                      }\n                    })\n                  }\n                }\n              })\n            })\n          }\n        })\n      } else {\n        this.currentTask = task\n        this.loadTaskComments({\n          taskId: this.route.params.task_id,\n          entityId: task.entity_id,\n          callback: (err) => {\n            if (err) {\n            } else {\n              this.currentTaskComments = this.getCurrentTaskComments()\n              this.currentTaskPreviews = this.getCurrentTaskPreviews()\n              this.setOtherPreviews()\n              this.currentPreviewPath = this.getOriginalPath()\n              this.currentPreviewDlPath = this.getOriginalDlPath()\n              this.entityPage = this.getEntityPage()\n              this.setOtherPreviews()\n              this.loadTaskSubscribed({\n                taskId: this.route.params.task_id,\n                callback: (err, subscribed) => {\n                  if (err) console.log(err)\n                  this.isSubscribed = subscribed\n                }\n              })\n            }\n          }\n        })\n      }\n    },\n\n    isHighlighted (comment) {\n      return comment.preview && comment.preview.id === this.currentPreviewId\n    },\n\n    getCurrentTask () {\n      return this.taskMap[this.route.params.task_id]\n    },\n\n    getCurrentComment () {\n      if (this.route.params.comment_id) {\n        return this.getTaskComment(\n          this.route.params.task_id,\n          this.route.params.comment_id\n        )\n      }\n    },\n\n    getCurrentTaskComments () {\n      return this.getTaskComments(this.route.params.task_id)\n    },\n\n    getCurrentTaskPreviews () {\n      return this.getTaskPreviews(this.route.params.task_id)\n    },\n\n    getCurrentTaskPath () {\n      if (this.currentTask) {\n        return `/tasks/${this.currentTask.id}`\n      } else {\n        return ''\n      }\n    },\n\n    getOriginalPath () {\n      let previewId = this.route.params.preview_id\n      if (!previewId &&\n          this.currentTaskPreviews &&\n          this.currentTaskPreviews.length > 0\n      ) {\n        previewId = this.currentTaskPreviews[0].id\n      }\n      const extension = this.extension ? this.extension : 'png'\n      return `/api/pictures/originals/preview-files/${previewId}.${extension}`\n    },\n\n    getOriginalDlPath () {\n      let previewId = this.route.params.preview_id\n      if (!previewId &&\n          this.currentTaskPreviews &&\n          this.currentTaskPreviews.length > 0\n      ) {\n        previewId = this.currentTaskPreviews[0].id\n      }\n      return `/api/pictures/originals/preview-files/${previewId}/download`\n    },\n\n    getPreviewPath () {\n      let previewId = this.route.params.preview_id\n      if (!previewId &&\n          this.currentTaskPreviews &&\n          this.currentTaskPreviews.length > 0\n      ) {\n        previewId = this.currentTaskPreviews[0].id\n      }\n      return `/api/pictures/previews/preview-files/${previewId}.png`\n    },\n\n    addComment (comment, taskStatusId) {\n      const finalize = (err, preview) => {\n        if (err) {\n          this.errors.addComment = true\n        } else {\n          this.$refs['add-preview-modal'].reset()\n          this.reset()\n          if (preview && preview.type === 'PreviewFile') {\n            this.resetPreview(preview)\n          }\n          this.attachedFileName = ''\n        }\n        this.loading.addComment = false\n      }\n      const params = {\n        taskId: this.currentTask.id,\n        taskStatusId: taskStatusId,\n        commentText: comment,\n        comment: comment,\n        callback: finalize\n      }\n      this.loading.addComment = true\n      this.errors.addComment = false\n      if (this.attachedFileName) {\n        this.commentTaskWithPreview(params)\n      } else {\n        this.commentTask(params)\n      }\n    },\n\n    reset () {\n      this.currentTaskComments = this.getCurrentTaskComments()\n      this.currentTaskPreviews = this.getCurrentTaskPreviews()\n      this.setOtherPreviews()\n      this.currentPreviewPath = this.getOriginalPath()\n      this.currentPreviewDlPath = this.getOriginalDlPath()\n      this.currentTask = this.getCurrentTask()\n      let previewId = this.route.params.preview_id\n      if (!previewId &&\n          this.currentTaskPreviews &&\n          this.currentTaskPreviews.length > 0) {\n        previewId = this.currentTaskPreviews[0].id\n      }\n      this.currentPreviewId = previewId\n    },\n\n    handleModalsDisplay () {\n      const path = this.$store.state.route.path\n\n      this.modals = {\n        addPreview: false,\n        addExtraPreview: false,\n        deleteExtraPreview: false,\n        changePreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      }\n      if (path.indexOf('change-preview') > 0) {\n        this.modals.changePreview = true\n      } else if (\n        path.indexOf('delete') > 0 && path.indexOf('comments') < 0\n      ) {\n        this.modals.deleteTask = true\n      }\n    },\n\n    selectFile (formData) {\n      this.loadPreviewFileFormData(formData)\n      this.attachedFileName = formData.get('file').name\n    },\n\n    createPreview () {\n      this.errors.addPreview = false\n      this.loading.addPreview = true\n      this.addCommentPreview({\n        taskId: this.route.params.task_id,\n        commentId: this.route.params.comment_id,\n        callback: (err, preview) => {\n          this.loading.addPreview = false\n          if (err) {\n            this.errors.addPreview = true\n          } else {\n            this.$refs['add-preview-modal'].reset()\n            this.resetPreview(preview)\n          }\n        }\n      })\n    },\n\n    createExtraPreview () {\n      this.errors.addExtraPreview = false\n      this.loading.addExtraPreview = true\n      const previewId = this.currentPreviewId\n      const comment = this.getCurrentTaskComments().find((comment) => {\n        return comment.previews.findIndex((p) => p.id === previewId) >= 0\n      })\n      this.addCommentExtraPreview({\n        taskId: this.currentTask.id,\n        previewId: this.currentPreview.id,\n        commentId: comment.id,\n        callback: (err, preview) => {\n          this.loading.addExtraPreview = false\n          if (err) {\n            this.errors.addExtraPreview = true\n          } else {\n            this.$refs['add-extra-preview-modal'].reset()\n            if (this.currentPreview) {\n              this.resetPreview(this.currentPreview)\n            } else {\n              this.resetPreview({\n                id: previewId\n              })\n            }\n            setTimeout(() => {\n              this.$refs['preview-picture'].displayLast()\n            }, 0)\n            this.modals.addExtraPreview = false\n          }\n        }\n      })\n    },\n\n    changePreview () {\n      const preview = this.currentTaskComments[0].preview\n      this.errors.changePreview = false\n      this.loading.changePreview = true\n\n      this.changeCommentPreview({\n        preview: preview,\n        taskId: this.currentTask.id,\n        comment: this.currentTaskComments[0],\n        callback: (err, extension) => {\n          this.loading.changePreview = false\n          if (err) {\n            this.errors.changePreview = true\n          } else {\n            this.$refs['change-preview-modal'].reset()\n            this.resetPreview(preview)\n          }\n        }\n      })\n    },\n\n    resetPreview (preview) {\n      this.currentTaskComments = this.getCurrentTaskComments()\n      this.currentTaskPreviews = this.getCurrentTaskPreviews()\n      this.setOtherPreviews()\n      this.currentPreviewPath = this.getOriginalPath()\n      this.currentPreviewDlPath = this.getOriginalDlPath()\n      if (preview) this.$router.push(this.previewPath(preview.id))\n    },\n\n    setPreview () {\n      this.loading.setPreview = true\n      this.errors.setPreview = false\n      this.$store.dispatch('setPreview', {\n        taskId: this.currentTask.id,\n        entityId: this.currentTask.entity.id,\n        previewId: this.currentPreviewId,\n        callback: (err) => {\n          if (err) {\n            this.errors.setPreview = true\n          }\n          this.loading.setPreview = false\n        }\n      })\n    },\n\n    setOtherPreviews () {\n      if (this.currentTaskPreviews) {\n        this.otherPreviews = this.currentTaskPreviews.filter((p) => {\n          return (\n            p.id !== this.currentPreviewId &&\n            p.extension === 'mp4'\n          )\n        })\n      } else {\n        this.otherPreviews = []\n      }\n      return this.otherPreviews\n    },\n\n    confirmDeleteTask () {\n      this.loading.deleteTask = true\n      this.errors.deleteTask = false\n\n      this.deleteTask({\n        task: this.currentTask,\n        callback: (err) => {\n          this.loading.deleteTask = false\n          if (err) {\n            this.errors.deleteTask = true\n          } else {\n            this.$router.push(this.entityPage)\n          }\n        }\n      })\n    },\n\n    confirmEditTaskComment (comment) {\n      this.loading.editComment = true\n      this.errors.editComment = false\n      this.editTaskComment({\n        taskId: this.currentTask.id,\n        comment,\n        callback: (err) => {\n          this.loading.editComment = false\n          if (err) {\n            this.errors.editComment = true\n          } else {\n            this.modals.editComment = false\n          }\n        }\n      })\n    },\n\n    saveComment (comment, checklist) {\n      this.editTaskComment({\n        taskId: this.currentTask.id,\n        comment,\n        checklist\n      })\n    },\n\n    confirmDeleteTaskComment () {\n      this.loading.deleteComment = true\n      this.errors.deleteComment = false\n      const commentId = this.commentToEdit.id\n\n      this.deleteTaskComment({\n        taskId: this.currentTask.id,\n        commentId,\n        callback: (err) => {\n          this.loading.deleteComment = false\n          if (err) {\n            this.errors.deleteComment = true\n          } else {\n            this.reset()\n            if (this.currentTaskPreviews &&\n                this.currentTaskPreviews.length > 0) {\n              this.resetPreview(this.currentTaskPreviews[0])\n            }\n            this.modals.deleteComment = false\n          }\n        }\n      })\n    },\n\n    confirmDeleteTaskPreview () {\n      this.loading.deleteExtraPreview = true\n      this.errors.deleteExtraPreview = false\n      const previewId = this.currentPreviewId\n      const comment = this.getCurrentTaskComments().find((comment) => {\n        return comment.previews.findIndex((p) => p.id === previewId) >= 0\n      })\n\n      this.$refs['preview-picture'].displayFirst()\n      this.deleteTaskPreview({\n        taskId: this.currentTask.id,\n        commentId: comment.id,\n        previewId: this.currentExtraPreviewId\n      })\n        .then(() => {\n          this.loading.deleteExtraPreview = false\n          this.resetPreview(this.currentPreview)\n          this.hideRemoveExtraPreviewModal()\n        })\n        .catch((err) => {\n          console.error(err)\n          this.loading.deleteExtraPreview = false\n          this.errors.deleteExtraPreview = true\n        })\n    },\n\n    onPreviewAdded (eventData) {\n      const taskId = eventData.task_id\n      const commentId = eventData.comment_id\n      const previewId = eventData.preview_file_id\n      const revision = eventData.revision\n      const extension = eventData.extension\n      const comment = this.$store.getters.getTaskComment(taskId, commentId)\n\n      if (\n        comment &&\n        (\n          comment.previews.length === 0 ||\n          comment.previews[0].id !== previewId\n        ) &&\n        taskId === this.currentTask.id\n      ) {\n        this.$store.commit('ADD_PREVIEW_END', {\n          preview: {\n            id: previewId,\n            revision,\n            extension: extension\n          },\n          taskId,\n          commentId,\n          comment\n        })\n        if (this.currentPreviewId) {\n          this.resetPreview({ id: this.currentPreviewId })\n        } else {\n          this.resetPreview({ id: previewId })\n        }\n      }\n    },\n\n    toggleSubscribe () {\n      if (this.currentTask && !this.isAssigned) {\n        if (this.isSubscribed) {\n          this.unsubscribeFromTask(this.currentTask.id)\n          this.isSubscribed = false\n        } else {\n          this.subscribeToTask(this.currentTask.id)\n          this.isSubscribed = true\n        }\n      }\n    },\n\n    taskPath (task, section = 'task') {\n      if (!task) {\n        task = this.currentTask\n      } else {\n        task.project_id = this.currentTask.project_id\n        task.episode_id = this.currentTask.episode_id\n      }\n\n      let route = { name: 'open-productions' }\n      if (task) {\n        route = {\n          name: section,\n          params: {\n            production_id: task.project_id,\n            task_id: task.id\n          }\n        }\n\n        if (this.isTVShow && this.currentEpisode) {\n          route.name = `episode-${section}`\n          route.params.episode_id = task.episode_id || this.currentEpisode.id\n        }\n      }\n      return route\n    },\n\n    previewPath (previewId) {\n      const route = this.taskPath(this.currentTask, 'task-preview')\n\n      if (route.params) {\n        route.params.preview_id = previewId\n      }\n      return route\n    },\n\n    onAnnotationChanged ({ preview, annotations }) {\n      const taskId = this.currentTask.id\n      this.updatePreviewAnnotation({ taskId, preview, annotations })\n    },\n\n    onAddExtraPreview () {\n      this.modals.addExtraPreview = true\n    },\n\n    hideExtraPreviewModal () {\n      this.modals.addExtraPreview = false\n    },\n\n    showRemoveExtraPreviewModal (preview) {\n      this.currentExtraPreviewId = preview.id\n      this.modals.deleteExtraPreview = true\n    },\n\n    hideRemoveExtraPreviewModal () {\n      this.modals.deleteExtraPreview = false\n    },\n\n    onAddPreviewClicked () {\n      this.modals.addPreview = true\n    },\n\n    closeAddPreviewModal () {\n      this.modals.addPreview = false\n    },\n\n    onPinComment (comment) {\n      this.pinComment(comment)\n    },\n\n    onEditComment (comment) {\n      this.commentToEdit = comment\n      this.modals.editComment = true\n    },\n\n    onDeleteComment (comment) {\n      this.commentToEdit = comment\n      this.modals.deleteComment = true\n    },\n\n    onCancelEditComment (comment) {\n      this.modals.editComment = false\n    },\n\n    onCancelDeleteComment (comment) {\n      this.modals.deleteComment = false\n    }\n  },\n\n  watch: {\n    currentPreviewId () {\n      this.setOtherPreviews()\n    },\n\n    $route () {\n      this.handleModalsDisplay()\n      if (this.$route.params.task_id !== this.currentTask.id) {\n        this.loadTaskData()\n      }\n      let previewId = this.route.params.preview_id\n      if (\n        !previewId &&\n        this.currentTaskPreviews &&\n        this.currentTaskPreviews.length > 0\n      ) {\n        previewId = this.currentTaskPreviews[0].id\n      }\n      this.currentPreviewId = previewId\n    }\n  },\n\n  socket: {\n    events: {\n      'preview-file:add-file' (eventData) {\n        this.onPreviewAdded(eventData)\n      },\n\n      'preview_file:update' (eventData) {\n        const preview = this.currentTaskPreviews.filter((preview) => {\n          return preview.id === eventData.preview_file_id\n        })\n        if (preview) {\n          this.refreshPreview({\n            taskId: this.currentTask.id,\n            previewId: eventData.preview_file_id\n          }).then(() => {\n            if (this.$refs['preview-movie']) {\n              if (!this.$refs['preview-movie'].isDrawing) {\n                this.$refs['preview-movie'].reloadAnnotations()\n              }\n            } else if (this.$refs['preview-picture']) {\n              if (!this.$refs['preview-picture'].isDrawing) {\n                this.$refs['preview-picture'].reset()\n              }\n            }\n          })\n        }\n      }\n    }\n  },\n\n  metaInfo () {\n    let title = 'Loading task... - Kitsu'\n    if (this.currentTask) {\n      const taskTypeName = this.taskTypeMap[this.currentTask.task_type_id].name\n      title = `${this.title} / ${taskTypeName} - Kitsu`\n    }\n    return { title }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark .page {\n  background: $dark-grey-light;\n  padding-bottom: 1em;\n}\n\n.dark .page-header,\n.dark .add-comment,\n.dark .comment,\n.dark .no-comment,\n.dark .preview-column-content,\n.dark .column {\n  background: #46494F;\n  border-color: $dark-grey;\n  box-shadow: 0px 0px 6px #333;\n}\n\nh2.subtitle {\n  margin: 0;\n  padding: 0;\n}\n\n.page {\n  background: #F9F9F9;\n  padding: 0;\n}\n\n.page-header {\n  padding: 1em;\n  margin-top: 1em;\n  background: white;\n  box-shadow: 0px 0px 6px #E0E0E0;\n  margin: 80px 1em 1em 1em;\n}\n\n.navigation-buttons {\n  font-size: 1em;\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.navigation-buttons .arrow {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.navigation-buttons a {\n  color: $grey;\n}\n\n.task-information {\n  margin-top: 1em;\n}\n\n.selected {\n  border: 0;\n}\n\n.source {\n  color: #AAA;\n  font-size: 0.8em;\n}\n\nvideo {\n  width: 100%;\n}\n\n.validation-buttons button {\n  width: 100%;\n  margin-bottom: 0.3em;\n  border-width: 2px;\n  font-weight: bold;\n}\n\n.preview-row {\n  margin-bottom: 0.5em;\n}\n\n.add-comment {\n  margin-bottom: 1em;\n  padding: 1em;\n  box-shadow: 0px 0px 6px #E0E0E0;\n}\n\n.no-comment {\n  background: white;\n  box-shadow: 0px 0px 6px #E0E0E0;\n  padding: 1em;\n  border-radius: 5px;\n}\n\n.comment {\n  box-shadow: 0px 0px 6px #E0E0E0;\n  margin-top: 0.3em;\n}\n\n.task-columns {\n  display: flex;\n  flex-direction: row;\n}\n\n.task-column {\n  width: 50%;\n  padding: 1em;\n}\n\n.preview-column-content {\n  background: white;\n  box-shadow: 0px 0px 6px #E0E0E0;\n  padding: 1em;\n  border-radius: 5px;\n  overflow-x: hidden;\n}\n\n.preview-list {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.page-header .tag {\n  border-radius: 0;\n  font-weight: bold;\n  color: $grey-strong;\n}\n\n.assignees {\n  display: flex;\n}\n\n.assignees span {\n  margin-right: 0.2em;\n}\n\n.preview-picture {\n  text-align: center;\n}\n\n.preview-picture img {\n  max-height: 700px;\n}\n\n.avatar-wrapper {\n  margin-right: 0.5em;\n}\n\n.entity-thumbnail {\n  width: 50px;\n  margin-right: 0.3em;\n}\n\n.title {\n  margin: 0;\n  flex: 1;\n}\n\n.pull-right {\n  margin-left: auto;\n}\n\n.title a {\n  color: inherit;\n}\n\n.set-main-preview {\n  height: 30px;\n}\n\n.back-link {\n  padding-top: 6px;\n}\n\n@media screen and (max-width: 768px) {\n  .action-button {\n    display: none;\n  }\n\n  .title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n\n  .header-title {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .header-title .flexrow-item {\n    margin-bottom: 0.5em;\n  }\n\n  .task-columns {\n    flex-direction: column-reverse;\n  }\n\n  .task-column {\n    width: 100%;\n    overflow-y: initial;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Task.vue?vue&type=template&id=7d21cefc&scoped=true&\"\nimport script from \"./Task.vue?vue&type=script&lang=js&\"\nexport * from \"./Task.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Task.vue?vue&type=style&index=0&id=7d21cefc&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7d21cefc\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreviewRow.vue?vue&type=style&index=0&id=f16eab4a&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreviewRow.vue?vue&type=style&index=0&id=f16eab4a&lang=scss&scoped=true&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=style&index=0&id=7d21cefc&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=style&index=0&id=7d21cefc&lang=scss&scoped=true&\"","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n"],"sourceRoot":""}